{
    "version": 1,
    "categories": [
        "autocrafting",
        "box-variable",
        "chest-halls",
        "data-storage",
        "decoders",
        "display-halls",
        "encoded-systems",
        "encoders",
        "everything-bagel",
        "external-bulk",
        "item-memory",
        "item-variable",
        "logic-and-computation",
        "merging",
        "resources",
        "splitting",
        "transport",
        "wiring"
    ],
    "entries": [
        {
            "path": [
                "autocrafting",
                "AC01 Box Color Swapper"
            ],
            "identifier": "AC01",
            "title": "Box Color Swapper",
            "authors": [
                "Basil"
            ],
            "tags": [
                "autocrafting",
                "box-color"
            ],
            "date": "25 December 2024",
            "revision": "1",
            "description": "The AC01 Box Color Swapper is a device that recolors shulker boxes using color dyes and a crafter. The device's item to color map is set using the built-in encoder. The device is designed to be safe, with features that prevent dry firing and ensure that the dyes are present. Without the necessary dyes, the device will not recolor the box. See the corresponding  \\href{https://www.youtube.com/watch?v=nnvas8g5LmQ}{explanation video on Youtube}. Inspired by Obi's encoder design.",
            "image": "area_render_30_.png",
            "tex": "AC01_Box_Color_Swapper.tex",
            "pdf": "AC01_Box_Color_Swapper.pdf",
            "features": [
                "Safety features: Dry fire proof and checks if dyes are present",
                "No idle hoppercarts",
                "Fully hopperlocked",
                "Small and compact"
            ],
            "applications": [
                "Recoloring shulker boxes before sending them to storage"
            ],
            "specifications": {
                "Throughput": {
                    "unit": "gt",
                    "conditions": "Normal Usage",
                    "typ": "125"
                },
                "Latency": {
                    "unit": "gt",
                    "conditions": "From input to crafter activation.",
                    "typ": "120"
                },
                "MC Version": {
                    "unit": "MCV",
                    "conditions": "Latest version at time of writing: 1.21.4",
                    "min": "1.21",
                    "typ": "1.21.4"
                },
                "Dimensions": {
                    "unit": "Blocks",
                    "conditions": "",
                    "typ": "23 x 12 x 7"
                }
            },
            "downloadInfo": [
                {
                    "identifier": "AC01",
                    "mc": "1.21",
                    "file": "AC01_Box_Color_Swapper.litematic",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/autocrafting/AC01%20Box%20Color%20Swapper/AC01_Box_Color_Swapper.litematic?raw=1",
                    "description": "Schematic of device.",
                    "sha256": "916bc24adb12712f15dd3bd5e205d2df48e2805d1f9fae6fe3b2619b09eabe55"
                }
            ],
            "testData": [
                {
                    "test": "Throughput test",
                    "result": "Device was able to correctly recolor boxes with multiple boxes input simultaneously"
                }
            ]
        },
        {
            "path": [
                "box-variable",
                "BV01 Simple Hopperspeed Grouper"
            ],
            "identifier": "BV01",
            "title": "Simple Hopperspeed Grouper",
            "authors": [
                "Andrews54757"
            ],
            "tags": [
                "box-variable",
                "hopperspeed"
            ],
            "date": "October 2022",
            "revision": "1",
            "description": "A simple hopper speed box grouper using svars. Given an input of varying boxes, it will buffer boxes with the same type to be outputted in a group when requested. Useful for reducing encoder calls. \n\nHas 9 svar slices with two double chests of buffer for each type. Easily expandable. Hopperlocking not included.",
            "image": "grouper.png",
            "tex": "BV01_Simple_Hopperspeed_Grouper.tex",
            "pdf": "BV01_Simple_Hopperspeed_Grouper.pdf",
            "features": [
                "Hopperspeed with 16gt output type switching delay",
                "Contains 9 1wt tileable svars",
                "132 buffer slots per slice"
            ],
            "applications": [
                "Optimizing box merging",
                "Reducing Encoder Usage"
            ],
            "specifications": {
                "Input Throughput": {
                    "unit": "HS",
                    "conditions": "Normal Usage",
                    "max": "1"
                },
                "Output Throughput": {
                    "unit": "HS",
                    "conditions": "Normal Usage",
                    "max": "1"
                },
                "Switching Delay": {
                    "unit": "gt",
                    "conditions": "Normal Usage",
                    "min": "16"
                },
                "MC Version": {
                    "unit": "MCV",
                    "conditions": "Latest version at time of writing: 1.19.2",
                    "min": "1.16",
                    "typ": "1.17.1"
                },
                "Dimensions": {
                    "unit": "Blks",
                    "conditions": "",
                    "typ": "17 x 18 x 28"
                }
            },
            "downloadInfo": [
                {
                    "identifier": "BV01",
                    "mc": "1.17.1",
                    "file": "BV01_hopperspeed_grouper_p1.litematic",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/box-variable/BV01%20Simple%20Hopperspeed%20Grouper/BV01_hopperspeed_grouper_p1.litematic?raw=1",
                    "description": "Litematic of grouper device",
                    "sha256": "286c51558f89ea7fd86f764922eef816fa99ac889e1d93c38940c12bf0e51630"
                }
            ],
            "testData": [
                {
                    "test": "Input/output test",
                    "result": "Device successfully grouped boxes of 12 different item types and sequentlially outputted them in hopperspeed"
                }
            ]
        },
        {
            "path": [
                "chest-halls",
                "CH01 Parallelized Encoded Chest Hall"
            ],
            "identifier": "CH01",
            "title": "Parallelized Encoded Chest Hall",
            "authors": [
                "Andrews54757"
            ],
            "tags": [
                "chest-halls",
                "parallelized",
                "decimal-encoding",
                "hopperlocked",
                "10-chests"
            ],
            "date": "October 2022",
            "revision": "1",
            "description": "The CH01 is a fully hopperlocked 10 item per slice encoded chest hall with a backend sporting up to 20x HS parallelization. It is able to insert both loose items and boxes into chests allowing for item/box hybrid functionality.\n\nThe transport mechanism for this hall does not support overflow protection. Extra items may despawn. It is recommended that the comparator readouts are used to limit the insertion amounts as needed to prevent overflow.\n\nComparator readouts are streamed from the chests at 10 codes / 8 gt. This is initiated by a pulsed signal.\n\nAll toggle states are self-repairable. The repair process is initiated by a pulsed signal.",
            "image": "chesthall.png",
            "tex": "CH01_Parallelized_Encoded_Chest_Hall.tex",
            "pdf": "CH01_Parallelized_Encoded_Chest_Hall.pdf",
            "features": [
                "800 chests, 10 chests per slice with 24 blocks of width",
                "Fully parallelizable (19x hopperspeed for items, 1x hopperspeed for box insertion)",
                "100% hopperlocked with sectional unlocking",
                "10/8 gt streamed comparator outputs",
                "Self-repairable toggle states with Auto-Fix sequence",
                "Low active lag, +1 ms at 1x HS, +6 ms at 20x HS"
            ],
            "specifications": {
                "Input Throughput": {
                    "unit": "HS",
                    "conditions": "Normal Usage",
                    "max": "1"
                },
                "Output Throughput": {
                    "unit": "HS",
                    "conditions": "Normal Usage",
                    "min": "1",
                    "max": "20"
                },
                "Order Execution Interval": {
                    "unit": "gt",
                    "conditions": "Dependant on unloader's used capacity",
                    "min": "88",
                    "typ": "106"
                },
                "Passive Lag": {
                    "unit": "ms",
                    "conditions": "Ryzen 5 3600, 2GB RAM. MC 1.18.1 with Lithium.",
                    "min": "1.5",
                    "typ": "2.8",
                    "max": "3.5"
                },
                "Active Lag": {
                    "unit": "ms",
                    "conditions": "Ryzen 5 3600, 2GB RAM. MC 1.18.1 with Lithium.",
                    "min": "+1",
                    "max": "+6"
                },
                "Hopper Count": {
                    "unit": "Hoppers",
                    "conditions": "",
                    "typ": "884"
                },
                "MC Version": {
                    "unit": "MCV",
                    "conditions": "Latest version at time of writing: 1.19.2",
                    "min": "1.16",
                    "typ": "1.18.2"
                },
                "Dimensions": {
                    "unit": "Blocks",
                    "conditions": "",
                    "typ": "24 x 91 x 108"
                }
            },
            "downloadInfo": [
                {
                    "identifier": "CH01",
                    "mc": "1.18.2",
                    "file": "CH01_encoded_chest_hall_p30.litematic",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/chest-halls/CH01%20Parallelized%20Encoded%20Chest%20Hall/CH01_encoded_chest_hall_p30.litematic?raw=1",
                    "description": "Litematic of chest hall with inventories.",
                    "sha256": "70f0ae9110df998b62cd06ee2cee12fcd096514b88a048e71ddac1451b5b8310"
                }
            ],
            "relatedComponents": [
                {
                    "identifier": "DC02",
                    "description": "10BPS 2 Digit Decimal Decoder"
                }
            ],
            "testData": [
                {
                    "test": "Item Stackability and Max Slots",
                    "result": "Unstackable, 16 stackable, and 64 stackable items were successfully input into the system with varying maxinum slot counts without overflowing."
                },
                {
                    "test": "All Chests",
                    "result": "Two boxes of items were successfully unloaded and inserted into every chest with no loss."
                },
                {
                    "test": "Box Mode",
                    "result": "Boxes were successfully inserted into multiple chests with no loss."
                },
                {
                    "test": "Unloader Component",
                    "result": "Hundreds of thousands of items were passed through unloader modules without loss. All empty boxes were collected. Varying box fill levels and premature abort was tested successfully."
                },
                {
                    "test": "Auto-Fix Toggles",
                    "result": "The storage was purposefully broken at various toggles and a repair was attempted with the auto-fix sequence. The system was always successfully repaired with multiple invokations of the auto-fix sequence."
                }
            ]
        },
        {
            "path": [
                "chest-halls",
                "CH02 Parallelized Encoded Chest Hall Using Discs"
            ],
            "identifier": "CH02",
            "title": "Parallelized Encoded Chest Hall Using Discs",
            "authors": [
                "JayRoi"
            ],
            "tags": [
                "chest-halls",
                "parallelized",
                "decimal-encoding",
                "hopperlocked",
                "10-chests",
                "disc-encoding"
            ],
            "date": "25 December 2024",
            "revision": "1",
            "description": "The CH02 Parallelized Encoded Chest Hall Using Discs is a demonstrative prototype of a parallelized unloading logic inspired by Andrews54757's chest hall. However, the system is designed to be more compact and efficient by using discs to encode the chest locations instead of embedded redstone memory.\n\nSingle shulkerboxes and their codes can be custom ordered to specific unloading conditions as chosen by the player, though the intention is these orders would be externally automated. Orders can be programmed to unload a single box to a certain amount from the box, insert additional boxes, or only insert boxes. The hall can process up to 10 orders at a time, allowing for roughly 10x hopperspeed parallelization.",
            "image": "pic.png",
            "tex": "CH02_Parallelized_Encoded_Chest_Hall_Using_Discs.tex",
            "pdf": "CH02_Parallelized_Encoded_Chest_Hall_Using_Discs.pdf",
            "features": [
                "540 chests, 10 chests per slice.",
                "25 block wide slices.",
                "Fully parallelizable (10x hopperspeed for items, 1x hopperspeed for box insertion)",
                "100% hopperlocked with sectional unlocking",
                "Self-repairable toggle states with Auto-Fix sequence"
            ],
            "specifications": {
                "Throughput": {
                    "unit": "HS",
                    "conditions": "Normal Usage",
                    "min": "1",
                    "max": "10"
                },
                "Hopper Count": {
                    "unit": "Hoppers",
                    "conditions": "",
                    "typ": "597"
                },
                "MC Version": {
                    "unit": "MCV",
                    "conditions": "Latest version at time of writing: 1.19.2",
                    "min": "1.20",
                    "typ": "1.20.1"
                },
                "Dimensions": {
                    "unit": "Blocks",
                    "conditions": "",
                    "typ": "25 x 71 x 65"
                }
            },
            "downloadInfo": [
                {
                    "identifier": "CH02",
                    "mc": "1.20.1",
                    "file": "CH02_Parallelized_Encoded_Chest_Hall_Using_Discs.litematic",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/chest-halls/CH02%20Parallelized%20Encoded%20Chest%20Hall%20Using%20Discs/CH02_Parallelized_Encoded_Chest_Hall_Using_Discs.litematic?raw=1",
                    "description": "Schematic of device.",
                    "sha256": "f7b2ca20f421dd74337a110196a72c27b9c3a3e29c291c0bc57df22e4cfb89de"
                }
            ],
            "relatedComponents": [
                {
                    "identifier": "CH01",
                    "description": "Parallelized Encoded Chest Hall"
                },
                {
                    "identifier": "DC02",
                    "description": "10BPS 2 Digit Decimal Decoder"
                }
            ],
            "testData": [
                {
                    "test": "Item insertion",
                    "result": "Items were successfully inserted in specific locations in parallel."
                }
            ]
        },
        {
            "path": [
                "data-storage",
                "DS01 Streamable Bit RAM"
            ],
            "identifier": "DS01",
            "title": "Streamable Bit RAM",
            "authors": [
                "Andrews54757"
            ],
            "tags": [
                "data-storage",
                "RAM",
                "streamable",
                "binary"
            ],
            "date": "October 2022",
            "revision": "1",
            "description": "The DS01 is a RAM module that stores 1600 bits of data in locked repeaters. Each bit is addressable through three 4-bit inputs. It is able to stream all of its stored data such that one bit is outputted per level every 4gt-8gt.",
            "image": "sram.png",
            "tex": "DS01_Streamable_Bit_RAM.tex",
            "pdf": "DS01_Streamable_Bit_RAM.pdf",
            "features": [
                "Constant time writes to individually addressible bits.",
                "RAM contents can be streamed at a certain rate.",
                "Matrix decoding addresses memory modules individually to reduce lag."
            ],
            "applications": [
                "Storing boolean flags for use in streamed logic.",
                "Reducing unecessary bulk calls in restock systems."
            ],
            "specifications": {
                "Write Throughput": {
                    "unit": "gt",
                    "conditions": "Normal Usage",
                    "min": "120"
                },
                "Output Throughput Per Level": {
                    "unit": "gt",
                    "conditions": "Normal Usage",
                    "min": "4",
                    "max": "8"
                },
                "Write Active Lag": {
                    "unit": "ms",
                    "conditions": "Ryzen 5 3600, 2GB RAM. MC 1.18.1 with Lithium.",
                    "min": "+0.2",
                    "typ": "+0.5",
                    "max": "+1.0"
                },
                "Stream Active Lag": {
                    "unit": "ms",
                    "conditions": "Ryzen 5 3600, 2GB RAM. MC 1.18.1 with Lithium.",
                    "min": "+1",
                    "typ": "+3",
                    "max": "+5"
                },
                "MC Version": {
                    "unit": "MCV",
                    "conditions": "Latest version at time of writing: 1.19.2",
                    "min": "1.16",
                    "typ": "1.17.1"
                },
                "Dimensions": {
                    "unit": "Blocks",
                    "conditions": "",
                    "typ": "50 x 32 x 50"
                }
            },
            "downloadInfo": [
                {
                    "identifier": "DS011600",
                    "mc": "1.17.1",
                    "file": "DS011600_1600_bit_RAM_p1.litematic",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/data-storage/DS01%20Streamable%20Bit%20RAM/DS011600_1600_bit_RAM_p1.litematic?raw=1",
                    "description": "Litematic of RAM with 1600 bits. Inventories not included.",
                    "sha256": "ee8f81873c022cc98e9fd9518b306471588b0995a7a9e9378618fb7129d18e47"
                },
                {
                    "identifier": "DS01600",
                    "mc": "1.18.2",
                    "file": "DS01600_600_bit_ram.litematic",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/data-storage/DS01%20Streamable%20Bit%20RAM/DS01600_600_bit_ram.litematic?raw=1",
                    "description": "Litematic of RAM with 600 bits. Wired slightly better. 36x32x36 blocks. Inventories not included.",
                    "sha256": "e1afd8c91b2a562c37dc2deb0bc30eb1c603d44ae151b476f46025feffe0a521"
                }
            ],
            "testData": [
                {
                    "test": "Write test",
                    "result": "Device was able to write to all bits successfully."
                },
                {
                    "test": "Stream test",
                    "result": "Device was able to stream all bits successfully."
                }
            ]
        },
        {
            "path": [
                "decoders",
                "DC01 6 Bit Binary Decoder"
            ],
            "identifier": "DC01",
            "title": "6 Bit Binary Decoder",
            "authors": [
                "Dzreams"
            ],
            "tags": [
                "decoders",
                "binary"
            ],
            "date": "October 2022",
            "revision": "1",
            "description": "The DC01 decoder takes six bits and outputs a pulse at one of 64 slices corresponding to the code.",
            "image": "6bit.png",
            "tex": "DC01_6_Bit_Decoder.tex",
            "pdf": "DC01_6_Bit_Decoder.pdf",
            "features": [
                "Constant time decoding. 14gt latency.",
                "Slim profile. 4 blocks wide.",
                "6gt throughput.",
                "QC based logic."
            ],
            "applications": [
                "Decoding binary signals for use in external bulk systems"
            ],
            "specifications": {
                "Throughput": {
                    "unit": "gt",
                    "conditions": "Normal Usage",
                    "min": "6",
                    "typ": "8"
                },
                "Latency": {
                    "unit": "gt",
                    "conditions": "Input to Output",
                    "min": "14"
                },
                "Active Lag": {
                    "unit": "ms",
                    "conditions": "At Hopperspeed. Ryzen 5 3600, 2GB RAM. MC 1.18.1 with Lithium.",
                    "min": "+4.0",
                    "typ": "4.5",
                    "max": "+5.0"
                },
                "MC Version": {
                    "unit": "MCV",
                    "conditions": "Latest version at time of writing: 1.19.2",
                    "min": "1.16",
                    "typ": "1.17.1"
                },
                "Dimensions": {
                    "unit": "Blocks",
                    "conditions": "",
                    "typ": "73 x 10 x 4"
                }
            },
            "downloadInfo": [
                {
                    "identifier": "DC01",
                    "mc": "1.17.1",
                    "file": "DC01_6bit_decoder.litematic",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/decoders/DC01%206%20Bit%20Binary%20Decoder/DC01_6bit_decoder.litematic?raw=1",
                    "description": "Litematic of decoder.",
                    "sha256": "3b0c023db197148a1e6337619c0552430ffde2769a97a9f64cab576957c1ea6f"
                }
            ],
            "testData": [
                {
                    "test": "Code test",
                    "result": "Device was able to decode all possible codes successfully."
                },
                {
                    "test": "Throughput test",
                    "result": "Device was able to decode at 6gt-8gt throughput."
                }
            ]
        },
        {
            "path": [
                "decoders",
                "DC02 2 Digit Decimal Decoder"
            ],
            "identifier": "DC02",
            "title": "2 Digit Decimal Decoder",
            "authors": [
                "Andrews54757"
            ],
            "tags": [
                "decoders",
                "decimal"
            ],
            "date": "October 2022",
            "revision": "1",
            "description": "The DC02 decoder takes two decimal digits and outputs a pulse at one of 100 slices corresponding to the code.",
            "image": "decoderfront.png",
            "tex": "DC02_2_Digit_Decimal_Decoder.tex",
            "pdf": "DC02_2_Digit_Decimal_Decoder.pdf",
            "features": [
                "Constant time decoding. 30gt latency.",
                "Slim profile. 4 blocks wide.",
                "Hopperspeed throughput.",
                "QC based logic with state auto-fix line."
            ],
            "applications": [
                "Decoding decimal signals for use in external bulk systems"
            ],
            "specifications": {
                "Throughput": {
                    "unit": "gt",
                    "conditions": "Normal Usage",
                    "min": "8"
                },
                "Latency": {
                    "unit": "gt",
                    "conditions": "Input to Output",
                    "min": "30"
                },
                "Active Lag": {
                    "unit": "ms",
                    "conditions": "At Hopperspeed. Ryzen 5 3600, 2GB RAM. MC 1.18.1 with Lithium.",
                    "min": "+2.0",
                    "max": "+4.1"
                },
                "MC Version": {
                    "unit": "MCV",
                    "conditions": "Latest version at time of writing: 1.19.2",
                    "min": "1.16",
                    "typ": "1.17.1"
                },
                "Dimensions": {
                    "unit": "Blocks",
                    "conditions": "",
                    "typ": "105 x 11 x 4"
                }
            },
            "downloadInfo": [
                {
                    "identifier": "DC02",
                    "mc": "1.17.1",
                    "file": "DC02_2Digit_Decimal_Decoder.litematic",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/decoders/DC02%202%20Digit%20Decimal%20Decoder/DC02_2Digit_Decimal_Decoder.litematic?raw=1",
                    "description": "Litematic of decoder. Includes subregions for testing.",
                    "sha256": "b23fb063982792213dd6140afa94fdd475455b4b945f9c3e37bc96d0854e5294"
                }
            ],
            "testData": [
                {
                    "test": "Code test",
                    "result": "Device was able to decode all possible codes successfully."
                },
                {
                    "test": "Auto-fix test",
                    "result": "Device was able to reset faulty dropper states successfully."
                },
                {
                    "test": "Throughput test",
                    "result": "Device was able to decode at 8gt throughput."
                }
            ]
        },
        {
            "path": [
                "decoders",
                "DC03 10BPS 2 Digit Decimal Decoder"
            ],
            "identifier": "DC03",
            "title": "10BPS 2 Digit Decimal Decoder",
            "authors": [
                "Andrews54757"
            ],
            "tags": [
                "decoders",
                "decimal",
                "linear time"
            ],
            "date": "October 2022",
            "revision": "1",
            "description": "The DC03 decoder takes two decimal digits and outputs a pulse at one of 100 slices corresponding to the code. The signal travels 10 blocks per second giving the device an O(n) time complexity.",
            "image": "bps.png",
            "tex": "DC03_10BPS_2_Digit_Decimal_Decoder.tex",
            "pdf": "DC03_10BPS_2_Digit_Decimal_Decoder.pdf",
            "features": [
                "O(n) linear time decoding, 2 gt/block. Signal travels 10 blocks per second.",
                "Slim profile. 4 blocks wide.",
                "Hopperspeed throughput.",
                "QC based logic with state auto-fix line."
            ],
            "applications": [
                "Decoding decimal signals for use in encoded chest halls"
            ],
            "specifications": {
                "Throughput": {
                    "unit": "gt",
                    "conditions": "Normal Usage",
                    "min": "8"
                },
                "Latency": {
                    "unit": "gt",
                    "conditions": "Input to Output.",
                    "min": "26",
                    "max": "224"
                },
                "Active Lag": {
                    "unit": "ms",
                    "conditions": "At Hopperspeed. Ryzen 5 3600, 2GB RAM. MC 1.18.1 with Lithium.",
                    "min": "+0.2",
                    "max": "+1.6"
                },
                "MC Version": {
                    "unit": "MCV",
                    "conditions": "Latest version at time of writing: 1.19.2",
                    "min": "1.13",
                    "typ": "1.18.2"
                },
                "Dimensions": {
                    "unit": "Blocks",
                    "conditions": "",
                    "typ": "104 x 8 x 4"
                }
            },
            "downloadInfo": [
                {
                    "identifier": "DC03",
                    "mc": "1.18.2",
                    "file": "DC03_10BPS_decimal_decoder_1.18.2.litematic",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/decoders/DC03%2010BPS%202%20Digit%20Decimal%20Decoder/DC03_10BPS_decimal_decoder_1.18.2.litematic?raw=1",
                    "description": "Litematic of decoder. Includes subregions for testing. Does not include inventories.",
                    "sha256": "3978ec7c190a9f50aebe9a07c8d4f5a197cbbee5fb57861b947a78a0d15551eb"
                }
            ],
            "testData": [
                {
                    "test": "Code test",
                    "result": "Device was able to decode all possible codes successfully."
                },
                {
                    "test": "Auto-fix test",
                    "result": "Device was able to reset faulty dropper states successfully."
                },
                {
                    "test": "Throughput test",
                    "result": "Device was able to decode at 8gt throughput."
                }
            ]
        },
        {
            "path": [
                "decoders",
                "DC04 Dual Sided 6 Bit Binary Decoder"
            ],
            "identifier": "DC04",
            "title": "Dual Sided 6 Bit Binary Decoder",
            "authors": [
                "FloppyDonkey"
            ],
            "tags": [
                "decoders",
                "binary",
                "dual-sided"
            ],
            "date": "December 2023",
            "revision": "1",
            "description": "The DC04 decoder takes six bits and outputs a pulse at one of 64 slices corresponding to the code. The device is dual sided, meaning it can output a signal to one of two different sides. This effectively adds another bit to the decoder, allowing for 128 different outputs.",
            "image": "dualdecoder.png",
            "tex": "DC04_Dual_Sided_6_Bit_Binary_Decoder.tex",
            "pdf": "DC04_Dual_Sided_6_Bit_Binary_Decoder.pdf",
            "features": [
                "Dual sided outputs.",
                "Signal travels 100 blocks per second.",
                "No 1gt offset needed. This is achieved through a combination of TTP to get the proper update order, and some rail diodes.",
                "Minimal flashing rails. QC based logic with BUDed rails.",
                "Hopperspeed throughput."
            ],
            "applications": [
                "Decoding decimal signals for use in remote bulk storage systems.",
                "Decoding decimal signals for use in encoded chest halls."
            ],
            "specifications": {
                "Throughput": {
                    "unit": "gt",
                    "conditions": "Normal Usage",
                    "min": "8"
                },
                "Latency": {
                    "unit": "gt",
                    "conditions": "Input to Output.",
                    "min": "12"
                },
                "Active Lag": {
                    "unit": "ms",
                    "conditions": "At Hopperspeed. Ryzen 5 3600, 2GB RAM. MC 1.19.3 with Lithium.",
                    "min": "+3.4",
                    "typ": "+3.5",
                    "max": "+3.6"
                },
                "MC Version": {
                    "unit": "MCV",
                    "conditions": "Latest version at time of writing: 1.20.4",
                    "min": "1.11",
                    "typ": "1.19.3"
                },
                "Dimensions": {
                    "unit": "Blocks",
                    "conditions": "",
                    "typ": "68 x 8 x 13"
                }
            },
            "downloadInfo": [
                {
                    "identifier": "DC04",
                    "mc": "1.17",
                    "file": "DC04_Dual_Sided_6_Bit_Binary_Decoder_1.17.litematic",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/decoders/DC04%20Dual%20Sided%206%20Bit%20Binary%20Decoder/DC04_Dual_Sided_6_Bit_Binary_Decoder_1.17.litematic?raw=1",
                    "description": "Litematic of decoder.",
                    "sha256": "5fadf9588a3d178e74b649ee13b989ed71bec79356eaed7c0c3b574c9b285f3e"
                }
            ],
            "testData": [
                {
                    "test": "Code test",
                    "result": "Device was able to decode all possible codes successfully."
                },
                {
                    "test": "Throughput test",
                    "result": "Device was able to decode at 8gt throughput."
                }
            ]
        },
        {
            "path": [
                "decoders",
                "DC05 4-9 Bit Binary Decoder With Top Output"
            ],
            "identifier": "DC05",
            "title": "4-9 Bit Binary Decoder With Top Output",
            "authors": [
                "Basil",
                "Crain"
            ],
            "tags": [
                "decoders",
                "binary"
            ],
            "date": "25 December 2024",
            "revision": "1",
            "description": "The DC05 decoder takes 4 bits and outputs a pulse at one of 16 slices corresponding to the code. The device can be expanded to 9 bits of input. The output can be taken from the top of the device.",
            "image": "decoderpic.png",
            "tex": "DC05_4-9_Bit_Binary_Decoder_With_Top_Output.tex",
            "pdf": "DC05_4-9_Bit_Binary_Decoder_With_Top_Output.pdf",
            "features": [
                "Can be expanded to up to 9 bits of input.",
                "Outputs can be taken from the top. (Observe rail state for output)",
                "11 gt latency and 8 gt throughput."
            ],
            "applications": [
                "Decoding binary signals for use in encoded systems"
            ],
            "specifications": {
                "Throughput": {
                    "unit": "gt",
                    "conditions": "Normal Usage",
                    "min": "8"
                },
                "Latency": {
                    "unit": "gt",
                    "conditions": "From input to output observer activation.",
                    "min": "11",
                    "typ": "11",
                    "max": "11"
                },
                "MC Version": {
                    "unit": "MCV",
                    "conditions": "Latest version at time of writing: 1.21.4",
                    "min": "1.13",
                    "typ": "1.19.3"
                },
                "Dimensions": {
                    "unit": "Blocks",
                    "conditions": "",
                    "typ": "5 x 6 x 20"
                }
            },
            "downloadInfo": [
                {
                    "identifier": "DC05",
                    "mc": "1.19.3",
                    "file": "DC05_4-9_Bit_Binary_Decoder_With_Top_Output.litematic",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/decoders/DC05%204-9%20Bit%20Binary%20Decoder%20With%20Top%20Output/DC05_4-9_Bit_Binary_Decoder_With_Top_Output.litematic?raw=1",
                    "description": "Schematic of device.",
                    "sha256": "9e37b3740d3b08c30aa7d3ba1271b336143a3fdcacfc84a62794ed3d34fc09f8"
                }
            ],
            "testData": [
                {
                    "test": "Throughput test",
                    "result": "Device was able to function with 8gt clocked input."
                }
            ]
        },
        {
            "path": [
                "display-halls",
                "DH01 Quad Display Slice With Reliable Collection"
            ],
            "identifier": "DH01",
            "title": "Quad Display Slice With Reliable Collection",
            "authors": [
                "Andrews54757"
            ],
            "tags": [
                "display-halls",
                "quad-display",
                "slice",
                "reliable-collection"
            ],
            "date": "December 2022",
            "revision": "1",
            "description": "The DH01 quad display slice has 4 box displays with reliable collection. It uses powdered snow in the displays for 100% reliable collection. It has a fully hopperlocked layout with no visible comparators or pistons. The bottom displays are bufferless with global first box placement. All toggle states are self resetting. For full hopperlocking, the top displays require a gap every 32 blocks.",
            "image": "slice2.png",
            "tex": "DH01_Quad_Display_Slice_With_Reliable_Collection.tex",
            "pdf": "DH01_Quad_Display_Slice_With_Reliable_Collection.pdf",
            "features": [
                "100% reliable collection",
                "Bufferless and spam-proof bottom displays",
                "24 blocks wide. 29 blocks tall.",
                "Fully hopperlocked."
            ],
            "applications": [
                "Display layout for a quad-display hall"
            ],
            "specifications": {
                "Item Throughput": {
                    "unit": "gt",
                    "conditions": "Normal Usage",
                    "min": "8"
                },
                "MC Version": {
                    "unit": "MCV",
                    "conditions": "Latest version at time of writing: 1.19.3",
                    "min": "1.18.2",
                    "typ": "1.18.2"
                },
                "Dimensions": {
                    "unit": "Blocks",
                    "conditions": "",
                    "typ": "1 x 29 x 24"
                }
            },
            "downloadInfo": [
                {
                    "identifier": "DH01",
                    "mc": "1.18.2",
                    "file": "DH01_quad_display_slice.litematic",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/display-halls/DH01%20Quad%20Display%20Slice%20With%20Reliable%20Collection/DH01_quad_display_slice.litematic?raw=1",
                    "description": "Litematic of slice.",
                    "sha256": "48257f3cb5b26a47054e9736600f6d2050d2c43f0c1a3a66add33f68e2a48a2b"
                }
            ],
            "testData": [
                {
                    "test": "Display operation",
                    "result": "Box displays were able to replace boxes when emptied."
                },
                {
                    "test": "Display spam",
                    "result": "Box displays did not break with items being taken in and out of box rapidly."
                }
            ]
        },
        {
            "path": [
                "display-halls",
                "DH02 Quad Display Slice With Passive Read"
            ],
            "identifier": "DH02",
            "title": "Quad Display Slice With Passive Read",
            "authors": [
                "Obi",
                "51 mayday",
                "hampter"
            ],
            "tags": [
                "display-halls",
                "quad-display",
                "slice",
                "passive-read"
            ],
            "date": "December 2022",
            "revision": "1",
            "description": "The DH02 quad display slice has 4 box displays with passive read ability. It has a fully hopperlocked layout with no visible pistons. The bottom displays has one buffer box with global first box placement. For full hopperlocking, the top displays require a gap every 32 blocks. Box collection is not fully reliable. Top display will break if used aggressively.",
            "image": "slice.png",
            "tex": "DH02_Quad_Display_Slice_With_Passive_Read.tex",
            "pdf": "DH02_Quad_Display_Slice_With_Passive_Read.pdf",
            "features": [
                "4 box displays & chests per slice.",
                "Minimum hoppers & chests for this layout. Fully hopper locked.",
                "In slice lists for which chests need to be restocked from empty.",
                "Easily reachable & visible inventories.",
                "Control logic can be relatively simple."
            ],
            "applications": [
                "Encoded quad-display hall"
            ],
            "specifications": {
                "Item Throughput": {
                    "unit": "gt",
                    "conditions": "Normal Usage",
                    "min": "8"
                },
                "MC Version": {
                    "unit": "MCV",
                    "conditions": "Latest version at time of writing: 1.19.3",
                    "min": "1.16",
                    "typ": "1.17.1"
                },
                "Dimensions": {
                    "unit": "Blocks",
                    "conditions": "",
                    "typ": "23 x 28 x 2"
                }
            },
            "downloadInfo": [
                {
                    "identifier": "DH02",
                    "mc": "1.17.1",
                    "file": "DH02_quadbulk_slice_2w_dev1.litematic",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/display-halls/DH02%20Quad%20Display%20Slice%20With%20Passive%20Read/DH02_quadbulk_slice_2w_dev1.litematic?raw=1",
                    "description": "Litematic of slice.",
                    "sha256": "1236913f2445e19d90aaa82fd3b0b4edd9583cbc49ae24c25e4dfe43a4d71dee"
                }
            ],
            "testData": [
                {
                    "test": "Display operation",
                    "result": "Box displays were able to replace boxes when emptied."
                }
            ]
        },
        {
            "path": [
                "display-halls",
                "DH03 Parallelized Quad Display Slice With Passive Read"
            ],
            "identifier": "DH03",
            "title": "Parallelized Quad Display Slice With Passive Read",
            "authors": [
                "51 mayday",
                "Obi",
                "hampter"
            ],
            "tags": [
                "display-halls",
                "quad-display",
                "slice",
                "passive-read",
                "parallelized"
            ],
            "date": "December 2022",
            "revision": "1",
            "description": "The DH03 quad display slice has 4 box displays with passive read ability and parallelized control logic. It has a fully hopperlocked layout with no visible pistons. The bottom displays has one buffer box with global first box placement. For full hopperlocking, the top displays require a gap every 32 blocks. Box collection is not fully reliable. Top display will break if used aggressively.",
            "image": "QuadBulk_V5_3.png",
            "tex": "DH03_Parallelized_Quad_Display_Slice_With_Passive_Read.tex",
            "pdf": "DH03_Parallelized_Quad_Display_Slice_With_Passive_Read.pdf",
            "features": [
                "Minimum hoppers & chests for this layout",
                "Fully hopper locked",
                "In-slice lists for which chests need to be restocked from empty",
                "Each quarter-slice can restock and call in parallel",
                "All inventories easily reachable/visible",
                "Control logic somewhat simple"
            ],
            "applications": [
                "Encoded quad-display hall"
            ],
            "specifications": {
                "Item Throughput": {
                    "unit": "gt",
                    "conditions": "Normal Usage",
                    "min": "8"
                },
                "MC Version": {
                    "unit": "MCV",
                    "conditions": "Latest version at time of writing: 1.19.3",
                    "min": "1.16",
                    "typ": "1.17.1"
                },
                "Dimensions": {
                    "unit": "Blocks",
                    "conditions": "",
                    "typ": "1 x 33 x 22"
                }
            },
            "downloadInfo": [
                {
                    "identifier": "DH03",
                    "mc": "1.17.1",
                    "file": "DH03_QuadBulk_V5_3.litematic",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/display-halls/DH03%20Parallelized%20Quad%20Display%20Slice%20With%20Passive%20Read/DH03_QuadBulk_V5_3.litematic?raw=1",
                    "description": "Litematic of slice.",
                    "sha256": "5d7c31461b0888ce0a2d7f428586789abe5de97d5176d05cf2a206298b8e7147"
                }
            ],
            "testData": [
                {
                    "test": "Display operation",
                    "result": "Box displays were able to replace boxes when emptied."
                }
            ]
        },
        {
            "path": [
                "display-halls",
                "DH04 Quad Display Slice With Slider Top Display"
            ],
            "identifier": "DH04",
            "title": "Quad Display Slice With Slider Top Display",
            "authors": [
                "Basil",
                "JayRoi"
            ],
            "tags": [
                "display-halls",
                "quad-display",
                "slice",
                "passive-read"
            ],
            "date": "23 December 2023",
            "revision": "2",
            "description": "The DH04 quad display slice has 4 box displays with passive read ability. It has a fully hopperlocked layout with no visible pistons. The bottom displays has one buffer box with global first box placement. Box collection is not fully reliable. Top display will break if used aggressively by activating with adjacent slices. Two alternative layouts are available.",
            "image": "slice2.png",
            "tex": "DH04_Quad_Display_Slice_With_Slider_Top_Display.tex",
            "pdf": "DH04_Quad_Display_Slice_With_Slider_Top_Display.pdf",
            "features": [
                "Fully hopperlocked with local top display locking",
                "Waterstream inputs",
                "Passive read restock system with in-slice lists",
                "Global first box placement"
            ],
            "applications": [
                "Encoded quad-display hall"
            ],
            "specifications": {
                "Item Throughput": {
                    "unit": "gt",
                    "conditions": "Normal Usage",
                    "min": "8"
                },
                "MC Version": {
                    "unit": "MCV",
                    "conditions": "Latest version at time of writing: 1.20.4",
                    "min": "1.13",
                    "typ": "1.19"
                },
                "Dimensions": {
                    "unit": "Blocks",
                    "conditions": "",
                    "typ": "2 x 25 x 23"
                }
            },
            "downloadInfo": [
                {
                    "identifier": "DH04",
                    "mc": "1.19",
                    "file": "DH04_Quad_Display_Slice_With_Slider_Top_Display.litematic",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/display-halls/DH04%20Quad%20Display%20Slice%20With%20Slider%20Top%20Display/DH04_Quad_Display_Slice_With_Slider_Top_Display.litematic?raw=1",
                    "description": "Schematic of device. Side with rails in waterstream incompatible with MCV \\textless 1.17",
                    "sha256": "127b3f4a00c5594d8547ed9bfe15295d0f5d87b2a66606fba1e219153c583195"
                }
            ],
            "testData": [
                {
                    "test": "Display operation",
                    "result": "Box displays were able to replace boxes when emptied."
                }
            ]
        },
        {
            "path": [
                "encoded-systems",
                "ES01 Palla Encoded V3.100"
            ],
            "identifier": "ES01",
            "title": "Palla Encoded V3.100",
            "authors": [
                "PallaPalla"
            ],
            "tags": [
                "encoded-systems",
                "palla"
            ],
            "date": "December 2022",
            "revision": "1",
            "description": "TODO",
            "image": "palla3.1.png",
            "tex": "ES01_Palla_Encoded_V3.100.tex",
            "pdf": "ES01_Palla_Encoded_V3.100.pdf",
            "features": [
                "Incomplete."
            ],
            "applications": [
                "Learning about encoded systems"
            ],
            "specifications": {
                "MC Version": {
                    "unit": "MCV",
                    "conditions": "Latest version at time of writing: 1.19.3",
                    "min": "1.12",
                    "typ": "1.12.2",
                    "max": "1.12.2"
                }
            },
            "downloadInfo": [
                {
                    "identifier": "ES01",
                    "mc": "1.12.2",
                    "file": "ES01_V3.100.schematic",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/encoded-systems/ES01%20Palla%20Encoded%20V3.100/ES01_V3.100.schematic?raw=1",
                    "description": "Schematic of system.",
                    "sha256": "0b019239bba6a9878e899b9726b425eed49ee56416fbbe55df75a534868b64db"
                }
            ]
        },
        {
            "path": [
                "encoded-systems",
                "ES02 Scicraft Hybrid Main Storage"
            ],
            "identifier": "ES02",
            "title": "Scicraft Hybrid Main Storage",
            "authors": [
                "Jorvp",
                "Obi",
                "CommandLeo",
                "et al."
            ],
            "tags": [
                "encoded-systems",
                "hybrid-encoded",
                "complete"
            ],
            "date": "25 December 2023",
            "revision": "1",
            "description": "The ES02 Scicraft Hybrid Main Storage is a hybrid encoded storage system, which means it uses regular filters for loose items and encoded box sorting. This system is complete, and is in use in the Scicraft technical Minecraft survival server. \\href{https://www.youtube.com/watch?v=8VbCW-Fqjhw}{Youtube video}",
            "image": "area_render_1_.png",
            "tex": "ES02_Scicraft_Hybrid_Main_Storage.tex",
            "pdf": "ES02_Scicraft_Hybrid_Main_Storage.pdf",
            "features": [
                "86.5% hopper locking. (15% of the unlocked hoppers are due to the mass crafter. You can get rid of it to achieve almost 99% hopperlocking.)",
                "0.5mspt idle, 5mspt active (Ryzen 9 7950X with lithium 1.19.2).",
                "3 Hybrid Halls, which means both items and boxes in the same hall, which makes for a very interesting item layout.",
                "Up to 378 Bulk Items, 756 Loose items.",
                "Fixed item encoded remote bulk.",
                "CommandLeo's unstackable sorter.",
                "Parallel unloader, (FITu) which allows for sorting items in parallel.",
                "Complete item layout with encoder setup.",
                "Multiple peripherals (furnace array, crafting station, Mass crafter, Box yeeter crafter, etc.)",
                "Full system status output panel",
                "Basic error checking, can pause the input if there is a problem",
                "Not a single Togglestate, which means every latch can be reset, with multiple buttons to reset them if there's a server crash.",
                "Chunkloaded, bulk chunkloaders only activate when needed."
            ],
            "applications": [
                "Learning about encoded systems",
                "Using it as a storage system"
            ],
            "specifications": {
                "MC Version": {
                    "unit": "MCV",
                    "conditions": "Latest version at time of writing: 1.20.4",
                    "min": "1.17",
                    "typ": "1.19.2"
                }
            },
            "downloadInfo": [
                {
                    "identifier": "ES02",
                    "mc": "1.19.2",
                    "file": "ES02_Scicraft_Hybrid_Main_Storage.zip",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/encoded-systems/ES02%20Scicraft%20Hybrid%20Main%20Storage/ES02_Scicraft_Hybrid_Main_Storage.zip?raw=1",
                    "description": "WDL of storage system.",
                    "sha256": "def04ec887eea7c9eac83801805e826616f674d96de3ff6cbcf63ffd133d77dd"
                }
            ],
            "testData": [
                {
                    "test": "SMP test",
                    "result": "Tested in production over a year of SMP (Although not very active) without any issues."
                }
            ]
        },
        {
            "path": [
                "encoders",
                "EC01 Hopperspeed Encoder V2"
            ],
            "identifier": "EC01",
            "title": "Hopperspeed Encoder V2",
            "authors": [
                "Andrews54757"
            ],
            "tags": [
                "encoders",
                "hopperspeed"
            ],
            "date": "December 2022",
            "revision": "1",
            "description": "The EC01 encoder uses multiple hoppercarts to allow for hopperspeed item to code encoding. The design shown is a 54 double-chest design which allows for up to 1000 item types with a decimal encoding scheme.",
            "image": "encoder.png",
            "tex": "EC01_Hopperspeed_Encoder_V2.tex",
            "pdf": "EC01_Hopperspeed_Encoder_V2.pdf",
            "features": [
                "Hopperspeed (9000 items/hr) encoding.",
                "Adjustable and expandable to work with any base.",
                "Requires 4 items per item type per chest.",
                "Uses 30 carts and floating rail."
            ],
            "applications": [
                "Encoding items"
            ],
            "specifications": {
                "Throughput": {
                    "unit": "gt",
                    "conditions": "Normal Usage",
                    "min": "8"
                },
                "Active Lag": {
                    "unit": "ms",
                    "conditions": "At Hopperspeed. Ryzen 5 3600, 2GB RAM. MC 1.18.1 with Lithium.",
                    "min": "+2",
                    "typ": "+2.5",
                    "max": "+3"
                },
                "MC Version": {
                    "unit": "MCV",
                    "conditions": "Latest version at time of writing: 1.19.3",
                    "min": "1.16",
                    "typ": "1.16.5"
                },
                "Dimensions": {
                    "unit": "Blocks",
                    "conditions": "",
                    "typ": "70 x 19 x 19"
                }
            },
            "downloadInfo": [
                {
                    "identifier": "EC01",
                    "mc": "1.16.5",
                    "file": "EC01_Hopperspeed_Encoder_V2-r1.zip",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/encoders/EC01%20Hopperspeed%20Encoder%20V2/EC01_Hopperspeed_Encoder_V2-r1.zip?raw=1",
                    "description": "World download of encoder",
                    "sha256": "e155977b3e8abb93a0bc24d3ba991a1c1644c95c4f293305fcf6dab5ed314ee1"
                }
            ],
            "testData": [
                {
                    "test": "Box encoding test",
                    "result": "Device was able to encode with box input"
                },
                {
                    "test": "Throughput test",
                    "result": "Device was able to encode at 8gt throughput with randomized input."
                }
            ]
        },
        {
            "path": [
                "encoders",
                "EC02 Small Decimal Encoder"
            ],
            "identifier": "EC02",
            "title": "Small Decimal Encoder",
            "authors": [
                "Andrews54757"
            ],
            "tags": [
                "encoders",
                "decimal"
            ],
            "date": "December 2022",
            "revision": "1",
            "description": "The EC02 small item to decimal encoder uses demibolts and a simple layered design. It can handle up to 1000 item types.",
            "image": "small.png",
            "tex": "EC02_Small_Decimal_Encoder.tex",
            "pdf": "EC02_Small_Decimal_Encoder.pdf",
            "features": [
                "Small and simple stacked design with demibolts.",
                "Encodes up to 1000 item types.",
                "Uses up to four carts for 1 code/56 gt throughput"
            ],
            "applications": [
                "Encoding items"
            ],
            "specifications": {
                "Throughput": {
                    "unit": "gt",
                    "conditions": "Normal Usage",
                    "min": "56"
                },
                "Active Lag": {
                    "unit": "ms",
                    "conditions": "At fullspeed. Ryzen 5 3600, 2GB RAM. MC 1.18.1 with Lithium.",
                    "min": "+0.5",
                    "typ": "+1",
                    "max": "+2"
                },
                "MC Version": {
                    "unit": "MCV",
                    "conditions": "Latest version at time of writing: 1.19.3",
                    "min": "1.16",
                    "typ": "1.17.1"
                },
                "Dimensions": {
                    "unit": "Blocks",
                    "conditions": "",
                    "typ": "28 x 13 x 17"
                }
            },
            "downloadInfo": [
                {
                    "identifier": "EC01",
                    "mc": "1.17.1",
                    "file": "EC02_small_decimal_encoder.litematic",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/encoders/EC02%20Small%20Decimal%20Encoder/EC02_small_decimal_encoder.litematic?raw=1",
                    "description": "Schematic of encoder.",
                    "sha256": "d295d52c4ed82e0ac3da00896992296099a91dec669794c2af2bbae55c03d4a1"
                }
            ],
            "testData": [
                {
                    "test": "Item encoding test",
                    "result": "Device was able to encode with item input"
                },
                {
                    "test": "Throughput test",
                    "result": "Device was able to encode at 8gt throughput with randomized input."
                }
            ]
        },
        {
            "path": [
                "encoders",
                "EC03 16gt Item Encoder"
            ],
            "identifier": "EC03",
            "title": "16gt Item Encoder",
            "authors": [
                "Andrews54757"
            ],
            "tags": [
                "encoders",
                "half-speed"
            ],
            "date": "December 2022",
            "revision": "1",
            "description": "The EC03 16gt encoder has a 16gt throughput encoder core which only requires one item per type in a chest. It uses 9 carts but can be easily modified with cart yeeting in 1.19+ (carts in storage are all empty). It is dustupdateless, honeyless, and MTE compatible.",
            "image": "coder.png",
            "tex": "EC03_16gt_Item_Encoder.tex",
            "pdf": "EC03_16gt_Item_Encoder.pdf",
            "features": [
                "Uses 9 carts for half-hopperspeed (16gt) throughput",
                "Requires only 1 item per type per chest.",
                "MTE compatible.",
                "Self resettable toggle states."
            ],
            "applications": [
                "Encoding items"
            ],
            "specifications": {
                "Throughput": {
                    "unit": "gt",
                    "conditions": "Normal Usage",
                    "min": "16"
                },
                "Active Lag": {
                    "unit": "ms",
                    "conditions": "At half-hopperspeed. Ryzen 5 3600, 2GB RAM. MC 1.18.1 with Lithium.",
                    "min": "+1",
                    "typ": "+1.4",
                    "max": "+2"
                },
                "MC Version": {
                    "unit": "MCV",
                    "conditions": "Latest version at time of writing: 1.19.3",
                    "min": "1.13",
                    "typ": "1.18.2"
                },
                "Dimensions": {
                    "unit": "Blocks",
                    "conditions": "",
                    "typ": "38 x 15 x 11"
                }
            },
            "downloadInfo": [
                {
                    "identifier": "EC03",
                    "mc": "1.18.2",
                    "file": "EC03_16gt_encoder_core_p2.litematic",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/encoders/EC03%2016gt%20Item%20Encoder/EC03_16gt_encoder_core_p2.litematic?raw=1",
                    "description": "Schematic of encoder.",
                    "sha256": "e599f19630b13adba967904cbd22f603aded9dcea9a9f1f003eee77ab3036dc6"
                },
                {
                    "identifier": "EC03B",
                    "mc": "1.19",
                    "file": "EC03_16gt_encoder_core_dispenser_1.19_p2.litematic",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/encoders/EC03%2016gt%20Item%20Encoder/EC03_16gt_encoder_core_dispenser_1.19_p2.litematic?raw=1",
                    "description": "Schematic of encoder with 1.19+ cart dispenser.",
                    "sha256": "67ba6d9ca8269cd7de8433bb57168e44a92601289c4e3fb4182e3722bf2d8f6b"
                }
            ],
            "testData": [
                {
                    "test": "Item encoding test",
                    "result": "Device was able to encode with item input"
                },
                {
                    "test": "Throughput test",
                    "result": "Device was able to encode at 16gt throughput with randomized input."
                }
            ]
        },
        {
            "path": [
                "encoders",
                "EC04 16gt Item Encoder With Slime And Honey"
            ],
            "identifier": "EC04",
            "title": "16gt Item Encoder With Slime And Honey",
            "authors": [
                "acacia-chan"
            ],
            "tags": [
                "encoders",
                "half-speed",
                "slime-honey"
            ],
            "date": "25 December 2023",
            "revision": "1",
            "description": "The EC04 16gt encoder has a 16gt throughput encoder core which only requires one item per type in a chest. It uses slime and honey in its wiring. Head not included.",
            "image": "area_render.png",
            "tex": "EC04_16gt_Item_Encoder_With_Slime_And_Honey.tex",
            "pdf": "EC04_16gt_Item_Encoder_With_Slime_And_Honey.pdf",
            "features": [
                "Half-hopperspeed (16gt) throughput",
                "Requires only 1 item per type per chest.",
                "No piston toggle states."
            ],
            "applications": [
                "Encoding items"
            ],
            "specifications": {
                "Throughput": {
                    "unit": "gt",
                    "conditions": "Normal Usage",
                    "min": "16"
                },
                "Active Lag": {
                    "unit": "ms",
                    "conditions": "At half-hopperspeed. Ryzen 5 3600, 2GB RAM. MC 1.19.3 with Lithium.",
                    "min": "+2",
                    "typ": "+3",
                    "max": "+4"
                },
                "MC Version": {
                    "unit": "MCV",
                    "conditions": "Latest version at time of writing: 1.20.4",
                    "min": "1.16",
                    "typ": "1.19.3"
                },
                "Dimensions": {
                    "unit": "Blocks",
                    "conditions": "",
                    "typ": "13 x 8 x 24"
                }
            },
            "downloadInfo": [
                {
                    "identifier": "EC04",
                    "mc": "1.19.3",
                    "file": "EC04_16gt_Item_Encoder_With_Slime_And_Honey.litematic",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/encoders/EC04%2016gt%20Item%20Encoder%20With%20Slime%20And%20Honey/EC04_16gt_Item_Encoder_With_Slime_And_Honey.litematic?raw=1",
                    "description": "Schematic of device.",
                    "sha256": "eab688faab4644985424dded5f29dd8224861eb54af159766b1f29563f1b47f2"
                }
            ],
            "testData": [
                {
                    "test": "Item encoding test",
                    "result": "Device was able to encode with item input"
                },
                {
                    "test": "Throughput test",
                    "result": "Device was able to encode at 16gt throughput with randomized input."
                }
            ]
        },
        {
            "path": [
                "encoders",
                "EC05 Hopperspeed Encoder With Minimal Code Items"
            ],
            "identifier": "EC05",
            "title": "Hopperspeed Encoder With Minimal Code Items",
            "authors": [
                "willymc"
            ],
            "tags": [
                "encoders",
                "hopperspeed"
            ],
            "date": "25 December 2023",
            "revision": "1",
            "description": "The EC05 encoder uses multiple hoppercarts to allow for hopperspeed item to code encoding. Unlike other hopperspeed encoders, this design only requires 2 items per item type per chest, the minimum amount possible.",
            "image": "pic.png",
            "tex": "EC05_Hopperspeed_Encoder_With_Minimal_Code_Items.tex",
            "pdf": "EC05_Hopperspeed_Encoder_With_Minimal_Code_Items.pdf",
            "features": [
                "Hopperspeed (9000 items/hr) encoding.",
                "Adjustable and expandable to work with any base.",
                "Requires only 2 items per item type per chest.",
                "Cart yeeter based cart recycler and storage."
            ],
            "applications": [
                "Encoding items"
            ],
            "specifications": {
                "Throughput": {
                    "unit": "gt",
                    "conditions": "Normal Usage",
                    "min": "8"
                },
                "Active Lag": {
                    "unit": "ms",
                    "conditions": "At Hopperspeed. Ryzen 5 3600, 2GB RAM. MC 1.19.3 with Lithium.",
                    "min": "+4",
                    "typ": "+8",
                    "max": "+10"
                },
                "MC Version": {
                    "unit": "MCV",
                    "conditions": "Latest version at time of writing: 1.20.4",
                    "min": "1.19",
                    "typ": "1.19.3"
                },
                "Dimensions": {
                    "unit": "Blocks",
                    "conditions": "",
                    "typ": "11 x 13 x 84"
                }
            },
            "downloadInfo": [
                {
                    "identifier": "EC05",
                    "mc": "1.19.3",
                    "file": "EC05_Hopperspeed_Encoder_With_Minimal_Code_Items.litematic",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/encoders/EC05%20Hopperspeed%20Encoder%20With%20Minimal%20Code%20Items/EC05_Hopperspeed_Encoder_With_Minimal_Code_Items.litematic?raw=1",
                    "description": "Schematic of device.",
                    "sha256": "4af47aabd3adb05045c5318f23f5ef4cbf8a84ad406548f012ddb2b2bfbdac7d"
                }
            ],
            "testData": [
                {
                    "test": "Box encoding test",
                    "result": "Device was able to encode with box input"
                },
                {
                    "test": "Throughput test",
                    "result": "Device was able to encode at 8gt throughput with randomized input. Four different codes were set with items in consecutive chests."
                }
            ]
        },
        {
            "path": [
                "encoders",
                "EC06 Item to Binary Encoder With Safety Features"
            ],
            "identifier": "EC06",
            "title": "Item to Binary Encoder With Safety Features",
            "authors": [
                "Obi"
            ],
            "tags": [
                "encoders",
                "safety-features"
            ],
            "date": "25 December 2023",
            "revision": "1",
            "description": "The EC06 Item to Binary Encoder With Safety Features is a 10 bit encoder with up to 1024 codes. It has safety features to prevent errors, namely dry fire protection and detection. It uses bit grouping to reduce the amount of chests needed for encoding. \\href{https://www.youtube.com/watch?v=1jVHZONWJmg}{Youtube video}",
            "image": "coderpic.png",
            "tex": "EC06_Item_to_Binary_Encoder_With_Safety_Features.tex",
            "pdf": "EC06_Item_to_Binary_Encoder_With_Safety_Features.pdf",
            "features": [
                "10 bit encoding with up to 1024 codes",
                "Easily accessible coding chests",
                "Safety features to prevent errors",
                "Dry fire protection and detection"
            ],
            "applications": [
                "Encoding items"
            ],
            "specifications": {
                "Throughput": {
                    "unit": "gt",
                    "conditions": "Normal Usage",
                    "min": "175"
                },
                "Latency": {
                    "unit": "gt",
                    "conditions": "From input to code output.",
                    "min": "119"
                },
                "MC Version": {
                    "unit": "MCV",
                    "conditions": "Latest version at time of writing: 1.20.4",
                    "min": "1.16",
                    "typ": "1.17.1"
                },
                "Dimensions": {
                    "unit": "Blocks",
                    "conditions": "",
                    "typ": "12 x 19 x 40"
                }
            },
            "downloadInfo": [
                {
                    "identifier": "EC06",
                    "mc": "1.17.1",
                    "file": "EC06_Item_to_Binary_Encoder_With_Safety_Features.zip",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/encoders/EC06%20Item%20to%20Binary%20Encoder%20With%20Safety%20Features/EC06_Item_to_Binary_Encoder_With_Safety_Features.zip?raw=1",
                    "description": "WDL of device.",
                    "sha256": "77e3a2b0258a7bea8b30575d2288b4cda183e6fed00b5a0147fdd7fb3ef9097f"
                },
                {
                    "identifier": "EC06",
                    "mc": "1.17.1",
                    "file": "EC06_Item_to_Binary_Encoder_With_Safety_Features.litematic",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/encoders/EC06%20Item%20to%20Binary%20Encoder%20With%20Safety%20Features/EC06_Item_to_Binary_Encoder_With_Safety_Features.litematic?raw=1",
                    "description": "Schematic of device.",
                    "sha256": "4b1bc143bb2cc029df8b3048e7255ef63355876858e6db8dc7659e1a39054737"
                }
            ],
            "testData": [
                {
                    "test": "Encoding test",
                    "result": "Device was able to encode properly with random input."
                }
            ]
        },
        {
            "path": [
                "encoders",
                "EC07 Unstackable Item Encoder"
            ],
            "identifier": "EC07",
            "title": "Unstackable Item Encoder",
            "authors": [
                "Basil",
                "Pyra",
                "77"
            ],
            "tags": [
                "encoders",
                "unstackable"
            ],
            "date": "25 December 2024",
            "revision": "1",
            "description": "The EC07 Unstackable Item Encoder is a device that sorts unstackable items using Pyra's unstackable sorter and then outputs boxes of the sorted items along with an encoded signal. The device features a built-in queue to output boxes of items upon request. The device is fully hopperlocked and is designed to sort music discs, enchanted books, potions, flint & steel, shears, powdered snow buckets, lava buckets, water buckets, boats, armor and minecarts in that order. Item codes can be set by modifying the read-only memory of the device. See the corresponding \\href{https://www.youtube.com/watch?v=1yDuKrriiYI}{explanation video on Youtube}.",
            "image": "area_render_33_.png",
            "tex": "EC07_Unstackable_Item_Encoder.tex",
            "pdf": "EC07_Unstackable_Item_Encoder.pdf",
            "features": [
                "Uses Pyra's unstackable sorter to sort items at hopperspeed.",
                "Built-in box loaders for each item type.",
                "Sorts music discs, enchanted books, potions, flint & steel, shears, powdered snow buckets, lava buckets, water buckets, boats, armor and minecarts in that order.",
                "Fully hopperlocked.",
                "Built-in queue for output."
            ],
            "applications": [
                "Sorting and encoding unstackable items."
            ],
            "specifications": {
                "Throughput": {
                    "unit": "gt",
                    "conditions": "Item input",
                    "min": "8"
                },
                "MC Version": {
                    "unit": "MCV",
                    "conditions": "Latest version at time of writing: 1.21.4",
                    "min": "1.21",
                    "typ": "1.21.4"
                },
                "Dimensions": {
                    "unit": "Blocks",
                    "conditions": "",
                    "typ": "8 x 22 x 14"
                }
            },
            "downloadInfo": [
                {
                    "identifier": "EC07",
                    "mc": "1.21",
                    "file": "EC07_Unstackable_Item_Encoder.litematic",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/encoders/EC07%20Unstackable%20Item%20Encoder/EC07_Unstackable_Item_Encoder.litematic?raw=1",
                    "description": "Schematic of device.",
                    "sha256": "f2423e1ef97734043e4f3dc1d89b73e6303ad396576eacd275813841e4993eff"
                }
            ],
            "testData": [
                {
                    "test": "Throughput test",
                    "result": "Device was able to function with various unstackable input"
                },
                {
                    "test": "Output test",
                    "result": "Device was able to output boxes with item codes"
                }
            ]
        },
        {
            "path": [
                "everything-bagel",
                "MX01 Morning Flower Alarm Loop"
            ],
            "identifier": "MX01",
            "title": "Morning Flower Alarm Loop",
            "authors": [
                "Andrews54757"
            ],
            "tags": [
                "everything-bagel",
                "music"
            ],
            "date": "December 2022",
            "revision": "1",
            "description": "The MX01 Morning Flower Alarm loop generates music to the tune of the \\href{https://www.youtube.com/watch?v=vTVWGoQcn9Q}{Morning Flower} alarm music on galaxy phones.",
            "image": "morning_loop.png",
            "tex": "MX01_Morning_Flower_Alarm_Loop.tex",
            "pdf": "MX01_Morning_Flower_Alarm_Loop.pdf",
            "features": [
                "Repeatedly outputs music."
            ],
            "applications": [
                "Fun and joy."
            ],
            "specifications": {
                "Music Length": {
                    "unit": "gt",
                    "conditions": "Time between loops.",
                    "min": "258"
                },
                "MC Version": {
                    "unit": "MCV",
                    "conditions": "Latest version at time of writing: 1.19.3",
                    "min": "1.13",
                    "typ": "1.16"
                },
                "Dimensions": {
                    "unit": "Blocks",
                    "conditions": "",
                    "typ": "19 x 7 x 7"
                }
            },
            "downloadInfo": [
                {
                    "identifier": "MX01",
                    "mc": "1.18.2",
                    "file": "MX01_morning_flower_alarm_loop.litematic",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/everything-bagel/MX01%20Morning%20Flower%20Alarm%20Loop/MX01_morning_flower_alarm_loop.litematic?raw=1",
                    "description": "Schematic of device.",
                    "sha256": "beb7905640eb22ee7c489bbc7a14f1b6b90765d54e287185a64525bdc6259531"
                }
            ],
            "testData": [
                {
                    "test": "Music test",
                    "result": "Device was able to produce the desired music."
                }
            ]
        },
        {
            "path": [
                "everything-bagel",
                "MX02 Jeopardy Theme Loop"
            ],
            "identifier": "MX02",
            "title": "Jeopardy Theme Loop",
            "authors": [
                "Andrews54757"
            ],
            "tags": [
                "everything-bagel",
                "music"
            ],
            "date": "21 December 2023",
            "revision": "1",
            "description": "The MX02 Jeopardy Theme Loop generates music to the tune of the \\href{https://www.youtube.com/watch?v=vWuQVpBeqLs}{Jeopardy! Theme} song.",
            "image": "jeopardy.png",
            "tex": "MX02_Jeopardy_Theme_Loop.tex",
            "pdf": "MX02_Jeopardy_Theme_Loop.pdf",
            "features": [
                "Repeatedly outputs the Jeopardy! theme song"
            ],
            "applications": [
                "Fun and joy."
            ],
            "specifications": {
                "Music Length": {
                    "unit": "gt",
                    "conditions": "Time between loops.",
                    "min": "256"
                },
                "MC Version": {
                    "unit": "MCV",
                    "conditions": "Latest version at time of writing: 1.19.3",
                    "min": "1.13",
                    "typ": "1.16"
                },
                "Dimensions": {
                    "unit": "Blocks",
                    "conditions": "",
                    "typ": "10 x 8 x 17"
                }
            },
            "downloadInfo": [
                {
                    "identifier": "MX02",
                    "mc": "1.19.3",
                    "file": "MX02_Jeopardy_Theme_Loop.litematic",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/everything-bagel/MX02%20Jeopardy%20Theme%20Loop/MX02_Jeopardy_Theme_Loop.litematic?raw=1",
                    "description": "Schematic of device.",
                    "sha256": "795771ef3489660e20912a227687e90e13cfcff087b7245ba314dfe4b1b30e04"
                }
            ],
            "testData": [
                {
                    "test": "Music test",
                    "result": "Device was able to produce the desired music."
                }
            ]
        },
        {
            "path": [
                "everything-bagel",
                "MX03 Bob The Builder Loop"
            ],
            "identifier": "MX03",
            "title": "Bob The Builder Loop",
            "authors": [
                "Andrews54757"
            ],
            "tags": [
                "everything-bagel",
                "music"
            ],
            "date": "25 December 2024",
            "revision": "1",
            "description": "The MX03 Bob The Builder Loop generates music to the tune of the \\href{https://www.youtube.com/watch?v=HdVg-2jn2OU}{Bob The Builder} theme song.\n\n``Can we fix it? Yes we can!\"",
            "image": "bob.png",
            "tex": "MX03_Bob_The_Builder_Loop.tex",
            "pdf": "MX03_Bob_The_Builder_Loop.pdf",
            "features": [
                "Repeatedly outputs the Bob The Builder theme song"
            ],
            "applications": [
                "Inspirational music."
            ],
            "specifications": {
                "Music Length": {
                    "unit": "gt",
                    "conditions": "Time between loops.",
                    "min": "384"
                },
                "MC Version": {
                    "unit": "MCV",
                    "conditions": "Latest version at time of writing: 1.21.4",
                    "min": "1.13",
                    "typ": "1.20.4"
                },
                "Dimensions": {
                    "unit": "Blocks",
                    "conditions": "",
                    "typ": "15 x 10 x 16"
                }
            },
            "downloadInfo": [
                {
                    "identifier": "MX03",
                    "mc": "1.20.4",
                    "file": "MX03_Bob_The_Builder_Loop.litematic",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/everything-bagel/MX03%20Bob%20The%20Builder%20Loop/MX03_Bob_The_Builder_Loop.litematic?raw=1",
                    "description": "Schematic of device.",
                    "sha256": "f7af5eb5e22368d168a14509aa2344899cff87c4a6e4b4cd95d1e98c6b837d5c"
                }
            ],
            "testData": [
                {
                    "test": "Music test",
                    "result": "Device was able to produce the desired music."
                }
            ]
        },
        {
            "path": [
                "external-bulk",
                "EB01 Minewave Fixed Bulk Slice"
            ],
            "identifier": "EB01",
            "title": "Minewave Fixed Bulk Slice",
            "authors": [
                "Basil"
            ],
            "tags": [
                "external-bulk",
                "fixed-bulk",
                "multi-slice"
            ],
            "date": "25 December 2024",
            "revision": "1",
            "description": "The EB01 Minewave Fixed Bulk Slice is a device that can be stacked to create a fixed external bulk storage system. The device interfaces with an decoder (not included) and a controller (not included) to automatically store and retrieve items with redstone control. Multi-slicing, the ability to set multiple slices to the same code, is supported. These multi-sliced slices need not be adjacent.",
            "image": "area_render_15_.png",
            "tex": "EB01_Minewave_Fixed_Bulk_Slice.tex",
            "pdf": "EB01_Minewave_Fixed_Bulk_Slice.pdf",
            "features": [
                "1.1 million item capacity",
                "Multi-slicing compatible",
                "Input overflow protection",
                "Fully hopperlocked"
            ],
            "applications": [
                "External bulk storage"
            ],
            "specifications": {
                "Throughput": {
                    "unit": "gt",
                    "conditions": "Input/output throughput",
                    "min": "8"
                },
                "Latency": {
                    "unit": "gt",
                    "conditions": "From output trigger to dropper activation.",
                    "min": "18"
                },
                "MC Version": {
                    "unit": "MCV",
                    "conditions": "Latest version at time of writing: 1.21.4",
                    "min": "1.16",
                    "typ": "1.21.4"
                },
                "Dimensions": {
                    "unit": "Blocks",
                    "conditions": "",
                    "typ": "1 x 26 x 29"
                }
            },
            "downloadInfo": [
                {
                    "identifier": "EB01",
                    "mc": "1.21.4",
                    "file": "EB01_Minewave_Fixed_Bulk_Slice.litematic",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/external-bulk/EB01%20Minewave%20Fixed%20Bulk%20Slice/EB01_Minewave_Fixed_Bulk_Slice.litematic?raw=1",
                    "description": "Schematic of device.",
                    "sha256": "d2e24708e0f4944231663cdac6394eb1b38b5b60449c9abdd4c82187eeeccbf5"
                }
            ],
            "testData": [
                {
                    "test": "Output test",
                    "result": "Device was able to output boxes correctly using the output triggers."
                }
            ]
        },
        {
            "path": [
                "item-memory",
                "IM01 100 Item RAM"
            ],
            "identifier": "IM01",
            "title": "100 Item RAM",
            "authors": [
                "Andrews54757"
            ],
            "tags": [
                "item-memory",
                "random-access"
            ],
            "date": "December 2022",
            "revision": "1",
            "description": "The IM01 is able to store and retrieve items with a specific decimal code. This may be useful as a temp storage in an encoded dynamic sorting system.",
            "image": "itemram.png",
            "tex": "IM01_100_Item_RAM.tex",
            "pdf": "IM01_100_Item_RAM.pdf",
            "features": [
                "Has 100 different codes/item types. a dropper of storage per code.",
                "Random access. Can insert and retrieve items in constant time in any order.",
                "Half hopperspeed order throughput. Can execute insertions and retrievals every 16 game ticks (exclusive, can't do both at same time).",
                "Hopperlocked. Can be fully hopperlocked.",
                "Togglestateless. No piston toggle states."
            ],
            "applications": [
                "Temp storage for merging.",
                "Dynamic bulk mapping storage."
            ],
            "specifications": {
                "Order Execution Interval": {
                    "unit": "gt",
                    "conditions": "Normal Usage",
                    "min": "16"
                },
                "Hopper Count": {
                    "unit": "Hoppers",
                    "conditions": "",
                    "typ": "110"
                },
                "MC Version": {
                    "unit": "MCV",
                    "conditions": "Latest version at time of writing: 1.19.3",
                    "min": "1.13",
                    "typ": "1.17.1"
                },
                "Dimensions": {
                    "unit": "Blocks",
                    "conditions": "",
                    "typ": "27 x 9 x 23"
                }
            },
            "downloadInfo": [
                {
                    "identifier": "IM01",
                    "mc": "1.17.1",
                    "file": "IM01_100_item_memory_1.17.1.litematic",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/item-memory/IM01%20100%20Item%20RAM/IM01_100_item_memory_1.17.1.litematic?raw=1",
                    "description": "Litematic of item RAM device.",
                    "sha256": "24ae02fe85023bb4509ccf9c224438a2a4c5bbd143277a2ba30e230c254b4628"
                }
            ],
            "testData": [
                {
                    "test": "Insertion",
                    "result": "Items were successfully inserted in all positions."
                },
                {
                    "test": "Retrieval",
                    "result": "Items were successfully retrieved from all positions."
                }
            ]
        },
        {
            "path": [
                "item-memory",
                "IM02 1000 Item RAM"
            ],
            "identifier": "IM02",
            "title": "1000 Item RAM",
            "authors": [
                "Andrews54757"
            ],
            "tags": [
                "item-memory",
                "random-access"
            ],
            "date": "December 2022",
            "revision": "1",
            "description": "The IM02 is able to store and retrieve items with a specific decimal code. This may be useful as a temp storage in an encoded dynamic sorting system.",
            "image": "ram2.png",
            "tex": "IM02_1000_Item_RAM.tex",
            "pdf": "IM02_1000_Item_RAM.pdf",
            "features": [
                "Has 1000 different codes/item types. a dropper of storage per code.",
                "Random access. Can insert and retrieve items in constant time in any order.",
                "Half hopperspeed order throughput. Can execute insertions and retrievals every 16 game ticks (exclusive, can't do both at same time).",
                "Hopperlocked. Is fully hopperlocked.",
                "Togglestateless. No piston toggle states."
            ],
            "applications": [
                "Temp storage for merging.",
                "Dynamic bulk mapping storage."
            ],
            "specifications": {
                "Order Execution Interval": {
                    "unit": "gt",
                    "conditions": "Normal Usage",
                    "min": "16"
                },
                "Hopper Count": {
                    "unit": "Hoppers",
                    "conditions": "",
                    "typ": "1111"
                },
                "MC Version": {
                    "unit": "MCV",
                    "conditions": "Latest version at time of writing: 1.19.3",
                    "min": "1.13",
                    "typ": "1.17.1"
                },
                "Dimensions": {
                    "unit": "Blocks",
                    "conditions": "",
                    "typ": "53 x 55 x 28"
                }
            },
            "downloadInfo": [
                {
                    "identifier": "IM02",
                    "mc": "1.17.1",
                    "file": "IM02_1000_item_RAM_p2.litematic",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/item-memory/IM02%201000%20Item%20RAM/IM02_1000_item_RAM_p2.litematic?raw=1",
                    "description": "Litematic of item RAM device.",
                    "sha256": "98d264ac5f9ac5f3410d7e20efcc5eb6e6d01f1613cb393d7962303eec618faf"
                }
            ],
            "testData": [
                {
                    "test": "Insertion",
                    "result": "Items were successfully inserted in all positions."
                },
                {
                    "test": "Retrieval",
                    "result": "Items were successfully retrieved from all positions."
                }
            ]
        },
        {
            "path": [
                "item-memory",
                "IM03 Compact Disk Drive Temp Storage"
            ],
            "identifier": "IM03",
            "title": "Compact Disk Drive Temp Storage",
            "authors": [
                "Obi",
                "Crain",
                "PallaPalla",
                "xXOpticNerveXx",
                "JayRoi"
            ],
            "tags": [
                "item-memory",
                "disk-drive",
                "temp-storage"
            ],
            "date": "21 December 2023",
            "revision": "1",
            "description": "The IM03 Compact Disk Drive Temp Storage is a device that stores boxes in a temporary storage system. The device is designed to be used in a dynamic sorting system to merge partial boxes. To use, set an 8 bit address and input a box. The drive will iterate through the boxes in the right chest to find a box already stored in the system. If a box is found, both boxes are outputted. If no box is found, the input box is stored in the drive for later pairing. The drive can store up to 256 boxes (one per address) in 8 double chests. \\href{https://www.youtube.com/watch?v=_OpecWSo2yc}{Youtube video}",
            "image": "diskdrive.png",
            "tex": "IM03_Compact_Disk_Drive_Temp_Storage.tex",
            "pdf": "IM03_Compact_Disk_Drive_Temp_Storage.pdf",
            "features": [
                "Stores 32 boxes in each double chest for high density",
                "8 bit address, up to 256 boxes",
                "Built in isBox check for easy pair detection",
                "Safety feature checks if chest is reset properly",
                "Safety feature checks if placeholder items are missing"
            ],
            "applications": [
                "Dynamic sorting partial box merging loop"
            ],
            "specifications": {
                "Throughput": {
                    "unit": "gt",
                    "conditions": "Normal Usage",
                    "min": "281",
                    "max": "790"
                },
                "Minimum Latency": {
                    "unit": "gt",
                    "conditions": "From input to pair output",
                    "min": "143",
                    "max": "391"
                },
                "MC Version": {
                    "unit": "MCV",
                    "conditions": "Latest version at time of writing: 1.20.4",
                    "min": "1.16",
                    "typ": "1.17.1"
                },
                "Dimensions": {
                    "unit": "Blocks",
                    "conditions": "",
                    "typ": "14 x 13 x 10"
                }
            },
            "downloadInfo": [
                {
                    "identifier": "IM03",
                    "mc": "1.17.1",
                    "file": "IM03_Compact_Disk_Drive_Temp_Storage.zip",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/item-memory/IM03%20Compact%20Disk%20Drive%20Temp%20Storage/IM03_Compact_Disk_Drive_Temp_Storage.zip?raw=1",
                    "description": "World download of device.",
                    "sha256": "159b0e1bd74c39b9c8f60f5c7455d39c668cefe69b2a1e16079412f22ad65af6"
                },
                {
                    "identifier": "IM03",
                    "mc": "1.17.1",
                    "file": "IM03_Compact_Disk_Drive_Temp_Storage.litematic",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/item-memory/IM03%20Compact%20Disk%20Drive%20Temp%20Storage/IM03_Compact_Disk_Drive_Temp_Storage.litematic?raw=1",
                    "description": "Schematic of device. Inventories included.",
                    "sha256": "53c9944e8f6a9cb2a8beeeb36ee8ca943ecb5174e5e84fb91bbd0c5d88b63f48"
                }
            ],
            "testData": [
                {
                    "test": "Pair generation test",
                    "result": "Device was able to produce pairs corresponding to the address."
                }
            ]
        },
        {
            "path": [
                "item-memory",
                "IM04 Compact 1000 Item RAM"
            ],
            "identifier": "IM04",
            "title": "Compact 1000 Item RAM",
            "authors": [
                "Andrews54757"
            ],
            "tags": [
                "item-memory",
                "random-access"
            ],
            "date": "25 December 2024",
            "revision": "1",
            "description": "The IM04 is able to store and retrieve items with a specific decimal code. This may be useful as a temp storage in an encoded dynamic sorting system.",
            "image": "imageassa.png",
            "tex": "IM04_Compact_1000_Item_RAM.tex",
            "pdf": "IM04_Compact_1000_Item_RAM.pdf",
            "features": [
                "Has 1000 different codes/item types. a dropper of storage per code.",
                "Random access. Can insert and retrieve items in constant time in any order.",
                "Compact. Each address is packed into a 1x1 area.",
                "46gt latency from call request to item.",
                "Fully hopperlocked."
            ],
            "applications": [
                "Temp storage for merging.",
                "Dynamic bulk mapping storage."
            ],
            "specifications": {
                "Order Execution Interval": {
                    "unit": "gt",
                    "conditions": "Normal Usage",
                    "min": "32"
                },
                "Hopper Count": {
                    "unit": "Hoppers",
                    "conditions": "",
                    "typ": "1055"
                },
                "MC Version": {
                    "unit": "MCV",
                    "conditions": "Latest version at time of writing: 1.21.4",
                    "min": "1.13",
                    "typ": "1.19.3"
                },
                "Dimensions": {
                    "unit": "Blocks",
                    "conditions": "",
                    "typ": "17 x 41 x 33"
                }
            },
            "downloadInfo": [
                {
                    "identifier": "IM04",
                    "mc": "1.19.3",
                    "file": "IM04_Compact_1000_Item_RAM.litematic",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/item-memory/IM04%20Compact%201000%20Item%20RAM/IM04_Compact_1000_Item_RAM.litematic?raw=1",
                    "description": "Schematic of device.",
                    "sha256": "a380681cd7a4a6f2de2d318e0f3e007a9c091b846f5d41ae549594178be9731b"
                }
            ],
            "testData": [
                {
                    "test": "Insertion",
                    "result": "Items were successfully inserted in all positions."
                },
                {
                    "test": "Retrieval",
                    "result": "Items were successfully retrieved from all positions."
                }
            ]
        },
        {
            "path": [
                "item-memory",
                "IM05 1000 Non-Box Item RAM"
            ],
            "identifier": "IM05",
            "title": "1000 Non-Box Item RAM",
            "authors": [
                "Andrews54757"
            ],
            "tags": [
                "item-memory",
                "random-access",
                "non-box"
            ],
            "date": "25 December 2024",
            "revision": "1",
            "description": "The IM05 is able to store and retrieve non-box items with a specific decimal code. This may be useful for implementing dictionaries in an encoded dynamic sorting system. The device uses a 50-address item memory system with a hoppercart based slot cycling system to store and retrieve 1000 different items at near constant time.",
            "image": "image_1 (1).png",
            "tex": "IM05_1000_Non-Box_Item_RAM.tex",
            "pdf": "IM05_1000_Non-Box_Item_RAM.pdf",
            "features": [
                "Has 1000 different codes/item types. Items are stored in slots inside shulker boxes inside a dropper.",
                "Random access. Can insert and retrieve items in constant time in any order.",
                "Compact. 22x10x19 volume.",
                "Maximum 55gt latency from call request to item."
            ],
            "applications": [
                "Dynamic code to item mapping.",
                "Linked-list dynamic bulk mapping storage. See \\href{https://www.youtube.com/watch?v=x6W-ZWkIdPE}{explanation video on Youtube}."
            ],
            "specifications": {
                "Latency": {
                    "unit": "gt",
                    "conditions": "From call request to item.",
                    "min": "36",
                    "max": "55"
                },
                "Hopper Count": {
                    "unit": "Hoppers",
                    "conditions": "",
                    "typ": "88"
                },
                "MC Version": {
                    "unit": "MCV",
                    "conditions": "Latest version at time of writing: 1.21.4",
                    "min": "1.17",
                    "typ": "1.19.3"
                },
                "Dimensions": {
                    "unit": "Blocks",
                    "conditions": "",
                    "typ": "22 x 10 x 19"
                }
            },
            "downloadInfo": [
                {
                    "identifier": "IM05",
                    "mc": "1.19.3",
                    "file": "IM05_1000_Non-Box_Item_RAM.litematic",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/item-memory/IM05%201000%20Non-Box%20Item%20RAM/IM05_1000_Non-Box_Item_RAM.litematic?raw=1",
                    "description": "Schematic of device. Includes dummy item storage.",
                    "sha256": "faab6738f6a1b0f24f95da5df765bfe60f38e6e36c3cc9cac892028de8465e5b"
                }
            ],
            "testData": [
                {
                    "test": "Insertion",
                    "result": "Items were successfully inserted in all positions."
                },
                {
                    "test": "Retrieval",
                    "result": "Items were successfully retrieved from all positions."
                }
            ]
        },
        {
            "path": [
                "item-memory",
                "IM06 8bit Disk Drive Temp Storage"
            ],
            "identifier": "IM06",
            "title": "8bit Disk Drive Temp Storage",
            "authors": [
                "disharmonica_"
            ],
            "tags": [
                "item-memory",
                "disk-drive",
                "temp-storage"
            ],
            "date": "25 December 2024",
            "revision": "1",
            "description": "The IM06 can temporarily store and retrieve boxes with a binary code. Intended for keeping the leftover partials of bulk items, for future merging operations. 256 different types can be held by this device.",
            "image": "area_render_35_.png",
            "tex": "IM06_8bit_Disk_Drive_Temp_Storage.tex",
            "pdf": "IM06_8bit_Disk_Drive_Temp_Storage.pdf",
            "features": [
                "Extremely compact, 13x9x7 lwh",
                "Very accessible inputs, output into waterstream, perfect for plumbing",
                "Has simple temp logic that gives out both boxes, if another one was in storage already",
                "Uses water buckets as placeholders, turns them into buckets to store very compact when not needed",
                "Quick cycle and reset, min.102gt - max.598gt = 17.5 seconds on average per request",
                "Only uses 21 hoppers, wiring for hopperlocking included"
            ],
            "applications": [
                "Dynamic sorting partial box merging loop"
            ],
            "specifications": {
                "Minimum Latency": {
                    "unit": "gt",
                    "conditions": "From input to pair output",
                    "min": "102",
                    "max": "598"
                },
                "MC Version": {
                    "unit": "MCV",
                    "conditions": "Latest version at time of writing: 1.21.4",
                    "min": "1.17",
                    "typ": "1.19.3"
                },
                "Dimensions": {
                    "unit": "Blocks",
                    "conditions": "",
                    "typ": "13 x 9 x 7"
                }
            },
            "downloadInfo": [
                {
                    "identifier": "IM06",
                    "mc": "1.20.1",
                    "file": "IM06_8bit_Disk_Drive_Temp_Storage.litematic",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/item-memory/IM06%208bit%20Disk%20Drive%20Temp%20Storage/IM06_8bit_Disk_Drive_Temp_Storage.litematic?raw=1",
                    "description": "Schematic of device.",
                    "sha256": "9fdb64f4d4eeff47db78b3d30c255791a0073bd3e5c487d5c90bbf2e82502afb"
                }
            ],
            "testData": [
                {
                    "test": "Pair generation test",
                    "result": "Device was able to produce pairs corresponding to the address."
                }
            ]
        },
        {
            "path": [
                "logic-and-computation",
                "LC01 1 Wide Redcoder"
            ],
            "identifier": "LC01",
            "title": "1 Wide Redcoder",
            "authors": [
                "Andrews54757"
            ],
            "tags": [
                "logic-and-computation",
                "redcoder"
            ],
            "date": "December 2022",
            "revision": "1",
            "description": "The LC01 1 wide redcoder takes a pulsed analog signal and outputs a pulse at one of 15 slices corresponding to the code.",
            "image": "redcoder.png",
            "tex": "LC01_1_Wide_Redcoder.tex",
            "pdf": "LC01_1_Wide_Redcoder.pdf",
            "features": [
                "1 Wide",
                "Stateless, uses quasi-based logic"
            ],
            "applications": [
                "Decoding analog signals"
            ],
            "specifications": {
                "Throughput": {
                    "unit": "gt",
                    "conditions": "Normal Usage",
                    "min": "10"
                },
                "MC Version": {
                    "unit": "MCV",
                    "conditions": "Latest version at time of writing: 1.19.3",
                    "min": "1.13",
                    "typ": "1.17.1"
                },
                "Dimensions": {
                    "unit": "Blocks",
                    "conditions": "",
                    "typ": "1 x 6 x 18"
                }
            },
            "downloadInfo": [
                {
                    "identifier": "LC01",
                    "mc": "1.17.1",
                    "file": "LC01_1w_redcoder.litematic",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/logic-and-computation/LC01%201%20Wide%20Redcoder/LC01_1w_redcoder.litematic?raw=1",
                    "description": "Schematic of device.",
                    "sha256": "9618d59aada73fea71e7971ee5037950b395c756b0ffe704e769e3618569a590"
                }
            ],
            "testData": [
                {
                    "test": "Decoding test",
                    "result": "Device was able to decode analog signals successfully at 10gt throughput."
                }
            ]
        },
        {
            "path": [
                "logic-and-computation",
                "LC02 Hopperspeed Hex to Binary"
            ],
            "identifier": "LC02",
            "title": "Hopperspeed Hex to Binary",
            "authors": [
                "Andrews54757"
            ],
            "tags": [
                "logic-and-computation",
                "converter"
            ],
            "date": "December 2022",
            "revision": "1",
            "description": "The LC02 Hopperspeed Hex to Binary takes a hex coded signal and outputs a binary coded signal. It is hopperspeed, meaning it can be used to convert a hex coded signal to a binary coded signal every 8 game ticks.",
            "image": "hextobin.png",
            "tex": "LC02_Hopperspeed_Hex_to_Binary.tex",
            "pdf": "LC02_Hopperspeed_Hex_to_Binary.pdf",
            "features": [
                "Hopperspeed throughput",
                "Stateless, uses quasi-based logic",
                "14gt Latency"
            ],
            "applications": [
                "Converting hex coded signals to binary"
            ],
            "specifications": {
                "Throughput": {
                    "unit": "gt",
                    "conditions": "Normal Usage",
                    "min": "8"
                },
                "Latency": {
                    "unit": "gt",
                    "conditions": "From input to output",
                    "min": "14"
                },
                "MC Version": {
                    "unit": "MCV",
                    "conditions": "Latest version at time of writing: 1.19.3",
                    "min": "1.13",
                    "typ": "1.17.1"
                },
                "Dimensions": {
                    "unit": "Blocks",
                    "conditions": "",
                    "typ": "19 x 9 x 4"
                }
            },
            "downloadInfo": [
                {
                    "identifier": "LC02",
                    "mc": "1.17.1",
                    "file": "LC02_hopperspeed_hex_to_bin.litematic",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/logic-and-computation/LC02%20Hopperspeed%20Hex%20to%20Binary/LC02_hopperspeed_hex_to_bin.litematic?raw=1",
                    "description": "Schematic of device.",
                    "sha256": "2982da7cdcd9143f83ec2ef4e4eb526443d7b87276245557cbeaeeb6cb931c93"
                }
            ],
            "testData": [
                {
                    "test": "Conversion test",
                    "result": "Device was able to convert signals successfully at 10gt throughput."
                }
            ]
        },
        {
            "path": [
                "logic-and-computation",
                "LC03 Await Latch"
            ],
            "identifier": "LC03",
            "title": "Await Latch",
            "authors": [
                "Andrews54757"
            ],
            "tags": [
                "logic-and-computation"
            ],
            "date": "December 2022",
            "revision": "1",
            "description": "The LC03 Await Latch takes one pulse input and one boolean input. Pulse only goes through when boolean input is on. If it is off, it will wait until boolean input turns on and then send pulse. Won't break with random inputs.",
            "image": "awaitlatch.png",
            "tex": "LC03_Await_Latch.tex",
            "pdf": "LC03_Await_Latch.pdf",
            "features": [
                "2 Wide and 2 High",
                "\"Unbreakable\""
            ],
            "applications": [
                "Queueing tasks"
            ],
            "specifications": {
                "Throughput": {
                    "unit": "gt",
                    "conditions": "Normal Usage",
                    "min": "12"
                },
                "Latency": {
                    "unit": "gt",
                    "conditions": "From input to output",
                    "min": "4"
                },
                "MC Version": {
                    "unit": "MCV",
                    "conditions": "Latest version at time of writing: 1.19.3",
                    "min": "1.13",
                    "typ": "1.17.1"
                },
                "Dimensions": {
                    "unit": "Blocks",
                    "conditions": "",
                    "typ": "2 x 2 x 7"
                }
            },
            "downloadInfo": [
                {
                    "identifier": "LC03",
                    "mc": "1.17.1",
                    "file": "LC03_await_latch.litematic",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/logic-and-computation/LC03%20Await%20Latch/LC03_await_latch.litematic?raw=1",
                    "description": "Schematic of device.",
                    "sha256": "961e642181549f1037c45cba952beab068d8898d124b43e5c030a75f2ec7da56"
                }
            ],
            "testData": [
                {
                    "test": "Spam test",
                    "result": "Device didn't break with spammed inputs."
                },
                {
                    "test": "Throughput test",
                    "result": "Device was able to pulse signals successfully at 12gt throughput."
                }
            ]
        },
        {
            "path": [
                "logic-and-computation",
                "LC04 2gt Binary Stream Splitter"
            ],
            "identifier": "LC04",
            "title": "2gt Binary Stream Splitter",
            "authors": [
                "Andrews54757"
            ],
            "tags": [
                "logic-and-computation",
                "converter"
            ],
            "date": "December 2022",
            "revision": "1",
            "description": "The LC04 binary stream splitter takes a 2gt repeater stream and splits it into two 4gt observer signal lines.",
            "image": "stream_split.png",
            "tex": "LC04_2gt_Binary_Stream_Splitter.tex",
            "pdf": "LC04_2gt_Binary_Stream_Splitter.pdf",
            "features": [
                "Stateless, uses quasi-based logic"
            ],
            "applications": [
                "Rapid data transmission"
            ],
            "specifications": {
                "MC Version": {
                    "unit": "MCV",
                    "conditions": "Latest version at time of writing: 1.19.3",
                    "min": "1.13",
                    "typ": "1.17.1"
                },
                "Dimensions": {
                    "unit": "Blocks",
                    "conditions": "",
                    "typ": "3 x 4 x 8"
                }
            },
            "downloadInfo": [
                {
                    "identifier": "LC04",
                    "mc": "1.17.1",
                    "file": "LC04_2gt_binary_stream_splitter_p1.litematic",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/logic-and-computation/LC04%202gt%20Binary%20Stream%20Splitter/LC04_2gt_binary_stream_splitter_p1.litematic?raw=1",
                    "description": "Schematic of device.",
                    "sha256": "7eb769b1949ca7f0ba7377d2ab09a42ce9aafb730aabe1509003a13d4e0c09e1"
                }
            ],
            "testData": [
                {
                    "test": "Conversion test",
                    "result": "Device was able to split 2gt binary stream into 2 4gt streams correctly."
                }
            ]
        },
        {
            "path": [
                "logic-and-computation",
                "LC05 Stateless Find Nearest"
            ],
            "identifier": "LC05",
            "title": "Stateless Find Nearest",
            "authors": [
                "Andrews54757"
            ],
            "tags": [
                "logic-and-computation"
            ],
            "date": "December 2022",
            "revision": "1",
            "description": "The LC05 find nearest dispenser outputs items from first filled dropper in line with each pulse. With an 8gt clock this will have an additional 8gt transition delay between groups. Items can be inserted during operation and the thing won't output multiple groups at same time by accident.",
            "image": "dispense.png",
            "tex": "LC05_Stateless_Find_Nearest.tex",
            "pdf": "LC05_Stateless_Find_Nearest.pdf",
            "features": [
                "Stateless, uses quasi-based logic",
                "Will not output more than one group at a time, even with random slice activation/deactivation timings"
            ],
            "applications": [
                "Box groupers"
            ],
            "specifications": {
                "Throughput": {
                    "unit": "gt",
                    "conditions": "Normal Usage",
                    "min": "8"
                },
                "Latency": {
                    "unit": "gt",
                    "conditions": "From input to dropper activation.",
                    "min": "6"
                },
                "MC Version": {
                    "unit": "MCV",
                    "conditions": "Latest version at time of writing: 1.19.3",
                    "min": "1.13",
                    "typ": "1.17.1"
                },
                "Dimensions": {
                    "unit": "Blocks",
                    "conditions": "",
                    "typ": "3 x 4 x 8"
                }
            },
            "downloadInfo": [
                {
                    "identifier": "LC05",
                    "mc": "1.17.1",
                    "file": "LC05_stateless_find_nearest.litematic",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/logic-and-computation/LC05%20Stateless%20Find%20Nearest/LC05_stateless_find_nearest.litematic?raw=1",
                    "description": "Schematic of device.",
                    "sha256": "c48bf2ed2945249ce63610c08ab9c86a5416cf925e186fc596827b5427516b94"
                }
            ],
            "testData": [
                {
                    "test": "Throughput test",
                    "result": "Device was able to function with 8gt clocked input."
                }
            ]
        },
        {
            "path": [
                "logic-and-computation",
                "LC06 Stateless 10 Bit Double Dabble"
            ],
            "identifier": "LC06",
            "title": "Stateless 10 Bit Double Dabble",
            "authors": [
                "Andrews54757"
            ],
            "tags": [
                "logic-and-computation",
                "converter"
            ],
            "date": "December 2022",
            "revision": "1",
            "description": "The LC06 device converts binary to binary coded decimal (binary -> decimal) using the combinational double dabble algorithm. 17 gt per level. Input can be clocked 8gt.",
            "image": "doubledabble.png",
            "tex": "LC06_Stateless_10_Bit_Double_Dabble.tex",
            "pdf": "LC06_Stateless_10_Bit_Double_Dabble.pdf",
            "features": [
                "Stateless, uses quasi-based logic",
                "Hopperspeed throughput"
            ],
            "applications": [
                "Converting binary codes to decimal"
            ],
            "specifications": {
                "Throughput": {
                    "unit": "gt",
                    "conditions": "Normal Usage",
                    "min": "8"
                },
                "Latency": {
                    "unit": "gt",
                    "conditions": "From input to dropper activation.",
                    "min": "119"
                },
                "MC Version": {
                    "unit": "MCV",
                    "conditions": "Latest version at time of writing: 1.19.3",
                    "min": "1.16",
                    "typ": "1.17.1"
                },
                "Dimensions": {
                    "unit": "Blocks",
                    "conditions": "",
                    "typ": "11 x 60 x 19"
                }
            },
            "downloadInfo": [
                {
                    "identifier": "LC06",
                    "mc": "1.17.1",
                    "file": "LC06_stateless_10bit_double_dabble.litematic",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/logic-and-computation/LC06%20Stateless%2010%20Bit%20Double%20Dabble/LC06_stateless_10bit_double_dabble.litematic?raw=1",
                    "description": "Schematic of device.",
                    "sha256": "5305acbae644456a9f34ee434f72eacd8b0f5494cbcb970b2a7e412659b79fa5"
                }
            ],
            "testData": [
                {
                    "test": "Throughput test",
                    "result": "Device was able to function with 8gt clocked input."
                }
            ]
        },
        {
            "path": [
                "logic-and-computation",
                "LC07 Decimal Delay Generator"
            ],
            "identifier": "LC07",
            "title": "Decimal Delay Generator",
            "authors": [
                "Andrews54757"
            ],
            "tags": [
                "logic-and-computation",
                "decimal",
                "variable-delay"
            ],
            "date": "21 December 2023",
            "revision": "1",
            "description": "The LC07 Decimal Delay Generator takes a decimal input and outputs a pulse after a delay of 10 to 19 game ticks. The delay is equal to the input signal strength plus 5. The device can be used to generate precise extraction trigger signal for a 1 slot/gt iterator device.",
            "image": "decimaldelay.png",
            "tex": "LC07_Decimal_Delay_Generator.tex",
            "pdf": "LC07_Decimal_Delay_Generator.pdf",
            "features": [
                "10gt to 19gt variable delay",
                "SS5-14 input",
                "Not random activation timings safe"
            ],
            "applications": [
                "Slot iterator device for dynamic bulk code mappings storage."
            ],
            "specifications": {
                "Throughput": {
                    "unit": "gt",
                    "conditions": "Normal Usage",
                    "min": "22"
                },
                "Delay": {
                    "unit": "gt",
                    "conditions": "From input to dropper activation.",
                    "min": "10",
                    "max": "19"
                },
                "MC Version": {
                    "unit": "MCV",
                    "conditions": "Latest version at time of writing: 1.20.4",
                    "min": "1.16",
                    "typ": "1.19.3"
                },
                "Dimensions": {
                    "unit": "Blocks",
                    "conditions": "",
                    "typ": "4 x 5 x 2"
                }
            },
            "downloadInfo": [
                {
                    "identifier": "LC07",
                    "mc": "1.19.3",
                    "file": "LC07_Decimal_Delay_Generator.litematic",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/logic-and-computation/LC07%20Decimal%20Delay%20Generator/LC07_Decimal_Delay_Generator.litematic?raw=1",
                    "description": "Schematic of device. Test input regions included.",
                    "sha256": "463918433e3d9a74de338b62cf6eb91a019494feca79e1e9f193421fe0758fad"
                }
            ],
            "testData": [
                {
                    "test": "Delay test",
                    "result": "Device was able to produce all delays ranging from 10 to 19 gt as determined by the input signal strength."
                },
                {
                    "test": "Failed random timings test",
                    "result": "Device was unable to survive random activation timings. A slider became stuck in the wrong state."
                }
            ]
        },
        {
            "path": [
                "logic-and-computation",
                "LC08 Precision Timings SIPO Register"
            ],
            "identifier": "LC08",
            "title": "Precision Timings SIPO Register",
            "authors": [
                "Andrews54757"
            ],
            "tags": [
                "logic-and-computation",
                "register",
                "sipo"
            ],
            "date": "21 December 2023",
            "revision": "1",
            "description": "The LC08 Precision Timings Serial Input Parallel Output (SIPO) Register seperates input signals by order of input. The device is capable of discriminating between signals sent in the same tick. The device is expandable, and can be used to decode crackpot encoding schemes.",
            "image": "sipo.png",
            "tex": "LC08_Precision_Timings_SIPO_Register.tex",
            "pdf": "LC08_Precision_Timings_SIPO_Register.pdf",
            "features": [
                "Expandable, QC based \"stateless\" logic",
                "High precision timings support. Can discriminate order of signals sent in the same tick."
            ],
            "applications": [
                "Crackpot encoding mapping algorithm"
            ],
            "specifications": {
                "MC Version": {
                    "unit": "MCV",
                    "conditions": "Latest version at time of writing: 1.20.4",
                    "min": "1.16",
                    "typ": "1.19.3"
                },
                "Dimensions": {
                    "unit": "Blocks",
                    "conditions": "",
                    "typ": "16 x 22 x 14"
                }
            },
            "downloadInfo": [
                {
                    "identifier": "LC08",
                    "mc": "1.19.3",
                    "file": "LC08_Precision_Timings_SIPO_Register.litematic",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/logic-and-computation/LC08%20Precision%20Timings%20SIPO%20Register/LC08_Precision_Timings_SIPO_Register.litematic?raw=1",
                    "description": "Schematic of device.",
                    "sha256": "7bd9d1c88d650d119137c74511bf0d2f664215a8e7c5b25d2066606514cb68ce"
                }
            ],
            "testData": [
                {
                    "test": "SIPO test",
                    "result": "Device was able to seperate signal order sent in same game tick."
                }
            ]
        },
        {
            "path": [
                "logic-and-computation",
                "LC09 Tiny Request Manager"
            ],
            "identifier": "LC09",
            "title": "Tiny Request Manager",
            "authors": [
                "Basil",
                "Heilz",
                "Skyzy"
            ],
            "tags": [
                "logic-and-computation",
                "request-manager"
            ],
            "date": "25 December 2024",
            "revision": "1",
            "description": "The LC09 Tiny Request Manager is a device that can be used to queue requests in a system. It ensures that only one request is processed at a time regardless of random request timings. The device is infinitely expandable and can be paused. Note: Reset input is not rapid input proof.",
            "image": "pic.png",
            "tex": "LC09_Tiny_Request_Manager.tex",
            "pdf": "LC09_Tiny_Request_Manager.pdf",
            "features": [
                "Random input proof",
                "Infinitely expandable",
                "Pausable",
                "Compact. 8x4x5 volume."
            ],
            "applications": [
                "Safely queueing procesess in a system."
            ],
            "specifications": {
                "Throughput": {
                    "unit": "gt",
                    "conditions": "Normal Usage",
                    "min": "10"
                },
                "Latency": {
                    "unit": "gt",
                    "conditions": "From lever input to torch depowering.",
                    "min": "16"
                },
                "MC Version": {
                    "unit": "MCV",
                    "conditions": "Latest version at time of writing: 1.21.4",
                    "min": "1.13",
                    "typ": "1.21.4"
                },
                "Dimensions": {
                    "unit": "Blocks",
                    "conditions": "",
                    "typ": "8 x 4 x 5"
                }
            },
            "downloadInfo": [
                {
                    "identifier": "LC09",
                    "mc": "1.21.4",
                    "file": "LC09_Tiny_Request_Manager.litematic",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/logic-and-computation/LC09%20Tiny%20Request%20Manager/LC09_Tiny_Request_Manager.litematic?raw=1",
                    "description": "Schematic of device. Includes three variants.",
                    "sha256": "e96b29bdb6b07fdee27a3e2ff000b7ca79302ddb8b716ebd0898881e8e5efdb2"
                },
                {
                    "identifier": "LC09B",
                    "mc": "1.19.3",
                    "file": "LC09_Tiny_Request_Manager_1.19.3.litematic",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/logic-and-computation/LC09%20Tiny%20Request%20Manager/LC09_Tiny_Request_Manager_1.19.3.litematic?raw=1",
                    "description": "Schematic of device for older versions.",
                    "sha256": "e4016bd30107d02385b21d83d9debf691a15b0241794b15ad9508c0344754075"
                }
            ],
            "testData": [
                {
                    "test": "Throughput test",
                    "result": "Device was able to function with 10gt clocked input. Note: levers must not go from all off to on while clocking. Invalid toggle-state position was observed in this case."
                },
                {
                    "test": "Random input test",
                    "result": "Device was able to process requests correctly with random lever inputs."
                }
            ]
        },
        {
            "path": [
                "merging",
                "MG01 Merging Pair Optimizer"
            ],
            "identifier": "MG01",
            "title": "Merging Pair Optimizer",
            "authors": [
                "SergyD",
                "Monica",
                "Catniped"
            ],
            "tags": [
                "merging",
                "pairing",
                "optimization"
            ],
            "date": "25 December 2023",
            "revision": "1",
            "description": "The MG01 Merging Pair Optimizer takes a list of boxes, categorized by fullness, and outputs pairs of boxes to be merged. The device is capable of optimizing the merging pairs to reduce the number of merging operations required. This is done by pairing the most full box with the least full box, the second most full box with the second least full box, and so on.",
            "image": "area_render_56.png",
            "tex": "MG01_Merging_Pair_Optimizer.tex",
            "pdf": "MG01_Merging_Pair_Optimizer.pdf",
            "features": [
                "Most full box to least full box pairing",
                "Automatic output clocking, 16gt per pair",
                "Small size"
            ],
            "applications": [
                "Optimizing merging pairs for a merging loop"
            ],
            "specifications": {
                "Throughput": {
                    "unit": "gt",
                    "conditions": "Normal Usage",
                    "min": "16"
                },
                "MC Version": {
                    "unit": "MCV",
                    "conditions": "Latest version at time of writing: 1.20.4",
                    "min": "1.14",
                    "typ": "1.19.3"
                },
                "Dimensions": {
                    "unit": "Blocks",
                    "conditions": "",
                    "typ": "6 x 6 x 19"
                }
            },
            "downloadInfo": [
                {
                    "identifier": "MG01",
                    "mc": "1.19.3",
                    "file": "MG01_Merging_Pair_Optimizer.litematic",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/merging/MG01%20Merging%20Pair%20Optimizer/MG01_Merging_Pair_Optimizer.litematic?raw=1",
                    "description": "Schematic of device.",
                    "sha256": "583f2726b5a60d2d9edf9a3b34298ae0f88b4430343ecab95413b8aa6a35d525"
                },
                {
                    "identifier": "MG01",
                    "mc": "1.19.3",
                    "file": "MG01S_Merging_Pair_Optimizer_With_Sorter.litematic",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/merging/MG01%20Merging%20Pair%20Optimizer/MG01S_Merging_Pair_Optimizer_With_Sorter.litematic?raw=1",
                    "description": "Schematic of device with fill level sorter.",
                    "sha256": "d8e7a9cb821a67b94f7778e3559e1b163be25e3752bf572c829c2fbf5bf6d23c"
                }
            ],
            "relatedComponents": [
                {
                    "identifier": "LC05",
                    "description": "Pairer based on stateless find nearest device."
                }
            ],
            "testData": [
                {
                    "test": "Pairing test",
                    "result": "Device was able to pair according to most-least pairing algorithm with random box input."
                }
            ]
        },
        {
            "path": [
                "merging",
                "MG02 Minimum Hopper Box Merger"
            ],
            "identifier": "MG02",
            "title": "Minimum Hopper Box Merger",
            "authors": [
                "Floppydonkey"
            ],
            "tags": [
                "merging",
                "minimum-hopper",
                "box-merger"
            ],
            "date": "25 December 2024",
            "revision": "1",
            "description": "The MG02 Minimum Hopper Box Merger is a device that can two partial shulker boxes into a full shulker box. The device is fully hopperlocked and uses the minimum number of hoppers required for a shulker box merger. Box comparison device for determining which box should be loaded/unloaded is not included.",
            "image": "area_render.png",
            "tex": "MG02_Minimum_Hopper_Box_Merger.tex",
            "pdf": "MG02_Minimum_Hopper_Box_Merger.pdf",
            "features": [
                "Uses only 3 hoppers per slice, the minimum required for a shulker box merger",
                "Fully hopperlocked",
                "Compact. 8x10x23 volume",
                "Includes 8 merger slices to merge multiple boxes simultaneously"
            ],
            "applications": [
                "Merging partial boxes in a dynamic sorting system"
            ],
            "specifications": {
                "MC Version": {
                    "unit": "MCV",
                    "conditions": "Latest version at time of writing: 1.21.4",
                    "min": "1.16",
                    "typ": "1.17.1"
                },
                "Dimensions": {
                    "unit": "Blocks",
                    "conditions": "",
                    "typ": "8 x 10 x 23"
                }
            },
            "downloadInfo": [
                {
                    "identifier": "MG02",
                    "mc": "1.17.1",
                    "file": "MG02_Minimum_Hopper_Box_Merger.litematic",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/merging/MG02%20Minimum%20Hopper%20Box%20Merger/MG02_Minimum_Hopper_Box_Merger.litematic?raw=1",
                    "description": "Schematic of device.",
                    "sha256": "4f7e3d92eb669dd8ede891a2b24c73a29d18fe8384ba19370da8b9dbc18a8469"
                }
            ],
            "testData": [
                {
                    "test": "Merging test",
                    "result": "Device was able to merge multiple boxes simultaneously."
                }
            ]
        },
        {
            "path": [
                "splitting",
                "SG01 Shulker Box Splitter Array"
            ],
            "identifier": "SG01",
            "title": "Shulker Box Splitter Array",
            "authors": [
                "Quacon Group"
            ],
            "tags": [
                "splitting"
            ],
            "date": "21 December 2022",
            "revision": "2",
            "description": "Splits mixed boxes into smaller boxes of the same type. This design uses the hopper dueling mechanism for a \"filter itemless\" setup. Video explanation \\href{https://www.youtube.com/watch?v=zRO1QfmYa6o}{here}.",
            "image": "splitarray.png",
            "tex": "SG01_Shulker_Box_Splitter_Array.tex",
            "pdf": "SG01_Shulker_Box_Splitter_Array.pdf",
            "features": [
                "No \"filter items\"",
                "2 wide tileable design"
            ],
            "applications": [
                "Dynamic sorting systems"
            ],
            "specifications": {
                "MC Version": {
                    "unit": "MCV",
                    "conditions": "Latest version at time of writing: 1.19.3",
                    "min": "1.16.5",
                    "typ": "1.16.5"
                },
                "Dimensions": {
                    "unit": "Blocks",
                    "conditions": "",
                    "typ": "14 x 19 x 9"
                }
            },
            "downloadInfo": [
                {
                    "identifier": "SG01",
                    "mc": "1.17.1",
                    "file": "SG01_Shulker_Box_Splitter_Array.zip",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/splitting/SG01%20Shulker%20Box%20Splitter%20Array/SG01_Shulker_Box_Splitter_Array.zip?raw=1",
                    "description": "World download of device.",
                    "sha256": "b08eccb6e3ea3d8be8ffb1fcd576fd6a41e5518864f8d514449c1aadc659ac85"
                }
            ],
            "testData": [
                {
                    "test": "Splitting test",
                    "result": "Device was able to split mixed boxes correctly."
                }
            ]
        },
        {
            "path": [
                "splitting",
                "SG02 Global Clock Shulker Box Splitter"
            ],
            "identifier": "SG02",
            "title": "Global Clock Shulker Box Splitter",
            "authors": [
                "Obi"
            ],
            "tags": [
                "splitting"
            ],
            "date": "21 December 2022",
            "revision": "3",
            "description": "Splits mixed boxes into smaller boxes of the same type. This design uses the hopper dueling mechanism for a \"filter itemless\" setup. It uses a global clock to allow for it to be paused during operation. Control wiring is comparatively tricky to do because of the global clock. Can lose empty boxes (although will not break) if they are input with no items. So don't do that.",
            "image": "globalclocksplitter1.png",
            "tex": "SG02_Global_Clock_Shulker_Box_Splitter.tex",
            "pdf": "SG02_Global_Clock_Shulker_Box_Splitter.pdf",
            "features": [
                "2wABt, fully hopper locked",
                "Globally clocked, allowing the array to be paused in operation",
                "Status outputs for activity, inactivity, & empty box supply"
            ],
            "applications": [
                "Dynamic sorting systems."
            ],
            "specifications": {
                "MC Version": {
                    "unit": "MCV",
                    "conditions": "Latest version at time of writing: 1.19.3",
                    "min": "1.11"
                },
                "Dimensions": {
                    "unit": "Blocks",
                    "conditions": "",
                    "typ": "11 x 18 x 16"
                }
            },
            "downloadInfo": [
                {
                    "identifier": "SG02",
                    "mc": "1.17.1",
                    "file": "SG02_Global_Clock_Shulker_Box_Splitter.litematic",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/splitting/SG02%20Global%20Clock%20Shulker%20Box%20Splitter/SG02_Global_Clock_Shulker_Box_Splitter.litematic?raw=1",
                    "description": "Schematic of device.",
                    "sha256": "62a2afea7e0fb037c684e3a1edb7f1abcae34d9e50f979d200ab97731f5724ab"
                }
            ],
            "testData": [
                {
                    "test": "Splitting test",
                    "result": "Device was able to split mixed boxes correctly."
                }
            ]
        },
        {
            "path": [
                "splitting",
                "SG03 High Speed Cart Based Ideal Splitter"
            ],
            "identifier": "SG03",
            "title": "High Speed Cart Based Ideal Splitter",
            "authors": [
                "Andrews54757"
            ],
            "tags": [
                "splitting",
                "cart",
                "ideal-splitting"
            ],
            "date": "21 December 2023",
            "revision": "1",
            "description": "The SG03 splitter takes boxes with items and splits them by item type. Items of the same type are loaded into boxes with ideal packing efficiency. Up to one partial box is output per item type. Unstackable items are split into a separate stream. The device utilizes hoppercarts to reach high speeds, with up to 31.5x hopperspeed throughput.",
            "image": "asdadad.png",
            "tex": "SG03_High_Speed_Cart_Based_Ideal_Splitter.tex",
            "pdf": "SG03_High_Speed_Cart_Based_Ideal_Splitter.pdf",
            "features": [
                "Minimum amount of partial boxes output.",
                "High speed. 31.5x hopperspeed throughput.",
                "Unstackables are split into a separate stream.",
                "Cart based box unloader compatible."
            ],
            "applications": [
                "Splitting mixed boxes for dynamic sorting systems.",
                "Merging boxes in a dynamic sorting system."
            ],
            "specifications": {
                "Throughput": {
                    "unit": "HS",
                    "conditions": "Typical throughput includes item refresh downtime.",
                    "min": "0.5",
                    "typ": "20",
                    "max": "31.5"
                },
                "Active Lag": {
                    "unit": "ms",
                    "conditions": "At max speed with 4k item entities. Ryzen 5 3600, 2GB RAM. MC 1.19.3 with Lithium.",
                    "min": "+2",
                    "typ": "+10",
                    "max": "+16"
                },
                "MC Version": {
                    "unit": "MCV",
                    "conditions": "Latest version at time of writing: 1.20.4",
                    "min": "1.19",
                    "typ": "1.19.3"
                },
                "Dimensions": {
                    "unit": "Blocks",
                    "conditions": "",
                    "typ": "26 x 31 x 22"
                }
            },
            "downloadInfo": [
                {
                    "identifier": "SG03",
                    "mc": "1.19.3",
                    "file": "SG03_High_Speed_Cart_Based_Ideal_Splitter.zip",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/splitting/SG03%20High%20Speed%20Cart%20Based%20Ideal%20Splitter/SG03_High_Speed_Cart_Based_Ideal_Splitter.zip?raw=1",
                    "description": "WDL of device. Cart unloader version included. Inventories included.",
                    "sha256": "f2f14a76bcf2fa767988e63e78ef8d6405bf7c456b03563aaad2ada31708a726"
                }
            ],
            "testData": [
                {
                    "test": "Ideal splitting test",
                    "result": "Device was able to split HermitCraft boxes correctly with minimum partial boxes."
                }
            ]
        },
        {
            "path": [
                "splitting",
                "SG04 Compact Shulker Box Splitter Array"
            ],
            "identifier": "SG04",
            "title": "Compact Shulker Box Splitter Array",
            "authors": [
                "Basil",
                "Kizu"
            ],
            "tags": [
                "splitting"
            ],
            "date": "25 December 2024",
            "revision": "1",
            "description": "The SG04 is a compact shulker box splitter array that can split mixed item shulker boxes into smaller boxes of the same type. The design uses the hopper dueling mechanism for a \"filter itemless\" setup. It uses a global clock to allow for it to be paused during operation. Note: It is not empty box input proof. Inspired by Obi's design.",
            "image": "area_render_20_.png",
            "tex": "SG04_Compact_Shulker_Box_Splitter_Array.tex",
            "pdf": "SG04_Compact_Shulker_Box_Splitter_Array.pdf",
            "features": [
                "Compact design. 20x17x7",
                "Seperate output for unstackable items.",
                "Fully hopperlocked.",
                "Filter itemless. (kissing hoppers)",
                "Pausable. Will only break sorted boxes if running.",
                "Automatic refill of empty boxes.",
                "Will ensure empty boxes are present before starting and will pause if empty boxes run out."
            ],
            "applications": [
                "Splitting mixed item shulker boxes for dynamic sorting systems."
            ],
            "specifications": {
                "MC Version": {
                    "unit": "MCV",
                    "conditions": "Latest version at time of writing: 1.21.4",
                    "min": "1.16",
                    "typ": "1.21.4"
                },
                "Dimensions": {
                    "unit": "Blocks",
                    "conditions": "",
                    "typ": "20 x 17 x 7"
                }
            },
            "downloadInfo": [
                {
                    "identifier": "SG04",
                    "mc": "1.21.4",
                    "file": "SG04_Compact_Shulker_Box_Splitter_Array.litematic",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/splitting/SG04%20Compact%20Shulker%20Box%20Splitter%20Array/SG04_Compact_Shulker_Box_Splitter_Array.litematic?raw=1",
                    "description": "Schematic of device.",
                    "sha256": "1128d8466f60ac31b021d562bc749859f52bae2d7123211df90f6fd7f28e0201"
                }
            ],
            "relatedComponents": [
                {
                    "identifier": "SG02",
                    "description": "Global Clock Shulker Box Splitter"
                }
            ],
            "testData": [
                {
                    "test": "Splitting test",
                    "result": "Device was able to split mixed boxes correctly."
                }
            ]
        },
        {
            "path": [
                "transport",
                "TP01 Decimal Encoded Variable Instant Dropperline"
            ],
            "identifier": "TP01",
            "title": "Decimal Encoded Variable Instant Dropperline",
            "authors": [
                "Andrews54757"
            ],
            "tags": [
                "transport",
                "decimal-encoded"
            ],
            "date": "21 December 2022",
            "revision": "1",
            "description": "Takes two comparator inputs (one decimal, one half-decimal) and deposits items in the decoded slice in constant time. The dropperline is fired twice per insertion to clear any potential overflow items. 10gt-able.",
            "image": "vardrop2.png",
            "tex": "TP01_Decimal_Encoded_Variable_Instant_Dropperline.tex",
            "pdf": "TP01_Decimal_Encoded_Variable_Instant_Dropperline.pdf",
            "features": [
                "Constant time insertion",
                "10gt throughput",
                "Fired twice for overflow handling"
            ],
            "applications": [
                "Item transportation for halls."
            ],
            "specifications": {
                "Throughput": {
                    "unit": "gt",
                    "conditions": "Normal Usage",
                    "min": "10"
                },
                "MC Version": {
                    "unit": "MCV",
                    "conditions": "Latest version at time of writing: 1.19.3",
                    "min": "1.16",
                    "typ": "1.17.1"
                },
                "Dimensions": {
                    "unit": "Blocks",
                    "conditions": "",
                    "typ": "67 x 11 x 10"
                }
            },
            "downloadInfo": [
                {
                    "identifier": "TP01",
                    "mc": "1.17.1",
                    "file": "TP01_Decimal_Encoded_Variable_Instant_Dropperline.litematic",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/transport/TP01%20Decimal%20Encoded%20Variable%20Instant%20Dropperline/TP01_Decimal_Encoded_Variable_Instant_Dropperline.litematic?raw=1",
                    "description": "Schematic of device.",
                    "sha256": "02587019e77a90213983605a69679e73be5979fc35a2cae9f867efb65bbee101"
                }
            ],
            "testData": [
                {
                    "test": "Decoding test",
                    "result": "Device was able to decode with 10gt clocked input."
                }
            ]
        },
        {
            "path": [
                "transport",
                "TP02 Pipelined Encoded Variable Waterstream"
            ],
            "identifier": "TP02",
            "title": "Pipelined Encoded Variable Waterstream",
            "authors": [
                "Andrews54757"
            ],
            "tags": [
                "transport",
                "binary-encoded"
            ],
            "date": "21 December 2022",
            "revision": "1",
            "description": "Takes a 6 bit binary code and deposits items in the decoded slice in linear time O(n). Pipeline-able for massively parallelized chest halls. Uses overstacked comparators with a 10bps waterstream to keep item entity and code in sync. Can execute an operation every 16gt.",
            "image": "pipe.png",
            "tex": "TP02_Pipelined_Encoded_Variable_Waterstream.tex",
            "pdf": "TP02_Pipelined_Encoded_Variable_Waterstream.pdf",
            "features": [
                "O(n) insertion time with 10BPS waterstream.",
                "16gt throughput",
                "Pipelined for parallelization."
            ],
            "applications": [
                "Item transport for halls."
            ],
            "specifications": {
                "Throughput": {
                    "unit": "gt",
                    "conditions": "Normal Usage",
                    "min": "16"
                },
                "MC Version": {
                    "unit": "MCV",
                    "conditions": "Latest version at time of writing: 1.19.3",
                    "min": "1.16",
                    "typ": "1.17.1"
                },
                "Dimensions": {
                    "unit": "Blocks",
                    "conditions": "",
                    "typ": "6 x 15 x 76"
                }
            },
            "downloadInfo": [
                {
                    "identifier": "TP02",
                    "mc": "1.17.1",
                    "file": "TP02_Pipelined_Encoded_Variable_Waterstream.litematic",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/transport/TP02%20Pipelined%20Encoded%20Variable%20Waterstream/TP02_Pipelined_Encoded_Variable_Waterstream.litematic?raw=1",
                    "description": "Schematic of device.",
                    "sha256": "3be07cd233b6aec9526343337ebae0de9db04833f58c6f30264ad37bb03b3fb5"
                }
            ],
            "testData": [
                {
                    "test": "Throughput test",
                    "result": "Device was able to function with 16gt clocked input."
                }
            ]
        },
        {
            "path": [
                "wiring",
                "WI01 6gt-able Instant Comparator Wire"
            ],
            "identifier": "WI01",
            "title": "6gt-able Instant Comparator Wire",
            "authors": [
                "RedCMD"
            ],
            "tags": [
                "wiring",
                "instant-comparator"
            ],
            "date": "21 December 2022",
            "revision": "1",
            "description": "This instant comparator wire has constant time on/off for all signal strengths.",
            "image": "redcmd.png",
            "tex": "WI01_6gt-able_Instant_Comparator_Wire.tex",
            "pdf": "WI01_6gt-able_Instant_Comparator_Wire.pdf",
            "features": [
                "Constant time on/off for all signal strengths",
                "6gt throughput"
            ],
            "applications": [
                "Analog signal transport."
            ],
            "specifications": {
                "Throughput": {
                    "unit": "gt",
                    "conditions": "Normal Usage",
                    "min": "6"
                },
                "MC Version": {
                    "unit": "MCV",
                    "conditions": "Latest version at time of writing: 1.19.3",
                    "min": "1.12",
                    "typ": "1.17.1"
                },
                "Dimensions": {
                    "unit": "Blocks",
                    "conditions": "",
                    "typ": "8 x 5 x 29"
                }
            },
            "downloadInfo": [
                {
                    "identifier": "WI01",
                    "mc": "1.17.1",
                    "file": "WI01_6gt-able_Instant_Comparator_Wire.litematic",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/wiring/WI01%206gt-able%20Instant%20Comparator%20Wire/WI01_6gt-able_Instant_Comparator_Wire.litematic?raw=1",
                    "description": "Schematic of device.",
                    "sha256": "77657730d3f1ddb13c1291e10888e7d59dc94fd125ad25096034011f5f1b71d4"
                }
            ],
            "testData": [
                {
                    "test": "Throughput test",
                    "result": "Device was able to function with 6gt clocked input."
                }
            ]
        },
        {
            "path": [
                "wiring",
                "WI02 Instant Upwards Comparator Wire"
            ],
            "identifier": "WI02",
            "title": "Instant Upwards Comparator Wire",
            "authors": [
                "Andrews54757"
            ],
            "tags": [
                "wiring",
                "instant-comparator"
            ],
            "date": "21 December 2022",
            "revision": "1",
            "description": "Transports signals upwards in constant time. Horizontal area of 10x3. Can input from multiple places as shown in schem.",
            "image": "area_render_3_copy.png",
            "tex": "WI02_Instant_Upwards_Comparator_Wire.tex",
            "pdf": "WI02_Instant_Upwards_Comparator_Wire.pdf",
            "features": [
                "Constant time on/off for all signal strengths < 15",
                "8gt throughput",
                "Can input from multiple places"
            ],
            "applications": [
                "Vertical signal transport."
            ],
            "specifications": {
                "Throughput": {
                    "unit": "gt",
                    "conditions": "Normal Usage",
                    "min": "8"
                },
                "MC Version": {
                    "unit": "MCV",
                    "conditions": "Latest version at time of writing: 1.19.3",
                    "min": "1.16",
                    "typ": "1.17.1"
                },
                "Dimensions": {
                    "unit": "Blocks",
                    "conditions": "",
                    "typ": "10 x 86 x 24"
                }
            },
            "downloadInfo": [
                {
                    "identifier": "WI02",
                    "mc": "1.17.1",
                    "file": "WI02_Instant_Upwards_Comparator_Wire.litematic",
                    "link": "https://github.com/Soontech-Annals/Archive/blob/8413f90a054b6c415703bae02badeba7541344f6/Archive/wiring/WI02%20Instant%20Upwards%20Comparator%20Wire/WI02_Instant_Upwards_Comparator_Wire.litematic?raw=1",
                    "description": "Schematic of device.",
                    "sha256": "0851ceecbc13e1678eefae313e757cd26850a3296b40cd214d1acce65a7fd822"
                }
            ],
            "testData": [
                {
                    "test": "Throughput test",
                    "result": "Device was able to function with 8gt clocked input."
                }
            ]
        }
    ]
}